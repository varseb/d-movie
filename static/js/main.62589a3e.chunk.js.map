{"version":3,"sources":["redux/http/request.js","env.js","redux/http/success.js","redux/http/failure.js","redux/api/config.js","redux/api/genre.js","redux/api/movie.js","redux/api/search.js","redux/api/index.js","redux/module/config.js","redux/module/genre.js","redux/module/layout.js","redux/module/search.js","redux/module/movie.js","redux/module/index.js","redux/store.js","redux/selector/genre.js","redux/selector/movie.js","redux/selector/index.js","redux/app.js","component/Layout/Header/Header.jsx","component/Layout/Layer/Layer.jsx","hook/useLockScroll.js","component/Layout/Stack/Stack.jsx","component/Poster/Poster.jsx","component/Rating/Rating.jsx","component/Info/Info.jsx","component/Genres/Genres.jsx","component/Credits/Credits.jsx","component/Layout/Stack/Layer.jsx","component/Stack/Movie/Movie.jsx","component/Stack/Search/Search.jsx","component/Layout/Layout.jsx","view/Main/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["request","payload","axios","url","params","api_key","success","type","response","store","dispatch","data","failure","error","getConfiguration","method","getGenres","discoverMovies","getMovie","id","getCredits","searchMovies","query","api","config","genre","movie","search","GET_CONFIGURATION_SUCCESS","initialState","images","meta","then","catch","reducer","state","actionType","GET_GENRES_SUCCESS","genres","reduce","OPEN_STACK","CLOSE_STACK","stack","openStack","namespace","props","closeStack","filter","UPDATE_QUERY","UPDATE_FILTER","SEARCH_MOVIES_REQUEST","SEARCH_MOVIES_SUCCESS","rating","results","loading","updateFilter","updateQuery","map","DISCOVER_MOVIES_SUCCESS","GET_MOVIE_SUCCESS","GET_CREDITS_SUCCESS","list","movies","credits","combineReducers","layout","middleware","thunk","createStore","JSON","parse","window","localStorage","getItem","e","getState","compose","applyMiddleware","subscribe","setItem","stringify","saveState","createSelector","genre_ids","getMovies","getCast","cast","slice","getDirector","crew","find","job","filterMovies","vote_average","getResults","selector","action","register","mapStateToProps","actions","Component","connect","bindActionCreators","openSearch","className","onClick","Layer","children","ref","useRef","arrayChildren","React","Children","toArray","TransitionGroup","component","child","i","CSSTransition","nodeRef","timeout","classnames","active","length","key","useLockScroll","useEffect","document","body","style","overflow","removeAttribute","Stack","size","backdrop","title","backdrop_path","poster_path","useState","loaded","setLoaded","path","posterUrl","secure_base_url","join","alt","src","onLoad","stars","Array","keys","Rating","voteAverage","onChange","star","Info","releaseDate","runTime","info","push","moment","format","h","Math","floor","m","prev","curr","Genres","name","Credits","value","stackList","director","release_date","runtime","overview","actor","openMovie","autoFocus","placeholder","event","target","stackOpen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","getElementById","ReactDOM","render","StrictMode","setTimeout","classList","add"],"mappings":"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","file":"static/js/main.62589a3e.chunk.js","sourcesContent":["import axios from 'axios'\nimport { apiUrl, apiKey } from 'env'\n\nconst request = payload => axios({\n  ...payload,\n  url: apiUrl + payload.url,\n  params: {\n    ...(payload.params || {}),\n    api_key: apiKey\n  }\n})\n\nexport default request\n","// This data should be in a non-versioned .env file\n// In order to avoid environment setup and make it easier I just used this file\n\nexport const apiUrl = 'https://api.themoviedb.org/3'\nexport const apiKey = '0d350753f143701136974b765ca31ac5'\n","import store from 'redux/store'\n\nconst success = (type, payload = {}) => response => {\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      data: response.data\n    }\n  })\n\n  return result\n}\n\n\nexport default success\n","import store from 'redux/store'\n\nconst failure = (type, payload = {}) => error => {\n\n  const { data } = error.response || { data : {} }\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      error: data.error\n    }\n  })\n\n  return result\n}\n\n\nexport default failure\n","import { request } from 'redux/http'\n\nexport const getConfiguration = () => request({\n  method: 'GET',\n  url: '/configuration'\n})\n","import { request } from 'redux/http'\n\nexport const getGenres = () => request({\n  method: 'GET',\n  url: '/genre/movie/list'\n})\n","import { request } from 'redux/http'\n\nexport const discoverMovies = () => request({\n  method: 'GET',\n  url: '/discover/movie'\n})\n\nexport const getMovie = ({ id }) => request({\n  method: 'GET',\n  url: `/movie/${id}`\n})\n\nexport const getCredits = ({ id }) => request({\n  method: 'GET',\n  url: `/movie/${id}/credits`\n})\n","import { request } from 'redux/http'\n\nexport const searchMovies = ({ query }) => request({\n  method: 'GET',\n  url: '/search/movie',\n  params: {\n    query\n  }\n})\n\n","import * as config from './config'\nimport * as genre from './genre'\nimport * as movie from './movie'\nimport * as search from './search'\n\nconst api = {\n  config,\n  genre,\n  movie,\n  search\n}\n\nexport default api\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_CONFIGURATION_REQUEST = 'config/GET_CONFIGURATION_REQUEST'\nconst GET_CONFIGURATION_SUCCESS = 'config/GET_CONFIGURATION_SUCCESS'\nconst GET_CONFIGURATION_FAILURE = 'config/GET_CONFIGURATION_FAILURE'\n\nconst initialState = {\n  images: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_CONFIGURATION_SUCCESS: {\n      const { images } = payload.data\n\n      return {\n        images\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getConfiguration = () => dispatch => dispatch({\n  type: GET_CONFIGURATION_REQUEST,\n  meta: api.config.getConfiguration()\n    .then(success(GET_CONFIGURATION_SUCCESS))\n    .catch(failure(GET_CONFIGURATION_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_GENRES_REQUEST = 'genre/GET_GENRES_REQUEST'\nconst GET_GENRES_SUCCESS = 'genre/GET_GENRES_SUCCESS'\nconst GET_GENRES_FAILURE = 'genre/GET_GENRES_FAILURE'\n\nconst initialState = {\n  genres: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_GENRES_SUCCESS: {\n      const { genres } = payload.data\n\n      return {\n        // Index genres by id for better access\n        genres: genres.reduce((genres, genre) => ({\n          ...genres,\n          [genre.id]: genre\n        }), {})\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getGenres = () => dispatch => dispatch({\n  type: GET_GENRES_REQUEST,\n  meta: api.genre.getGenres()\n    .then(success(GET_GENRES_SUCCESS))\n    .catch(failure(GET_GENRES_FAILURE))\n})\n\n\nexport default reducer\n","const OPEN_STACK  = 'layout/OPEN_STACK'\nconst CLOSE_STACK = 'layout/CLOSE_STACK'\n\nconst initialState = {\n  stack: []\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case OPEN_STACK: {\n      const { namespace, props } = payload\n\n      return {\n        ...state,\n        stack: [\n          ...state.stack,\n          {\n            namespace,\n            props: props || {}\n          }\n        ]\n      }\n    }\n\n    case CLOSE_STACK:\n      return {\n        ...state,\n        stack: state.stack.filter(({ namespace }) => namespace !== payload.namespace)\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const openStack = namespace => props => dispatch => dispatch({\n  type: OPEN_STACK,\n  payload: {\n    namespace,\n    props\n  }\n})\n\nexport const closeStack = namespace => () => dispatch => dispatch({\n  type: CLOSE_STACK,\n  payload: {\n    namespace\n  }\n})\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst UPDATE_QUERY = 'search/UPDATE_QUERY'\n\nconst UPDATE_FILTER = 'search/UPDATE_FILTER'\n\nconst SEARCH_MOVIES_REQUEST = 'search/SEARCH_MOVIES_REQUEST'\nconst SEARCH_MOVIES_SUCCESS = 'search/SEARCH_MOVIES_SUCCESS'\nconst SEARCH_MOVIES_FAILURE = 'search/SEARCH_MOVIES_FAILURE'\n\nconst initialState = {\n  query: '',\n  filter: {\n    rating: null\n  },\n  results: {},\n  loading: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case UPDATE_QUERY:\n      return {\n        ...state,\n        query: payload.query\n      }\n\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          ...payload\n        }\n      }\n\n    case SEARCH_MOVIES_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          [payload.query]: true\n        }\n      }\n\n    case SEARCH_MOVIES_SUCCESS: {\n      const { query, data: { results } } = payload\n\n      // search results (movie id's) indexed by query\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          [query]: false\n        },\n        results: {\n          ...state.results,\n          [query]: results.map(({ id }) => id)\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n// Export this action will let the movie reducer use it to store the movie source\nexport {\n  SEARCH_MOVIES_SUCCESS\n}\n\nexport const updateFilter = payload => dispatch => dispatch({\n  type: UPDATE_FILTER,\n  payload\n})\n\nexport const updateQuery = payload => dispatch => {\n  dispatch({\n    type: UPDATE_QUERY,\n    payload\n  })\n\n  if( payload.query ){\n    dispatch(searchMovies(payload))\n  }\n}\n\nexport const searchMovies = payload => dispatch => dispatch({\n  type: SEARCH_MOVIES_REQUEST,\n  payload,\n  meta: api.search.searchMovies(payload)\n    .then(success(SEARCH_MOVIES_SUCCESS, payload))\n    .catch(failure(SEARCH_MOVIES_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nimport { SEARCH_MOVIES_SUCCESS } from './search'\n\nconst DISCOVER_MOVIES_REQUEST = 'movie/DISCOVER_MOVIES_REQUEST'\nconst DISCOVER_MOVIES_SUCCESS = 'movie/DISCOVER_MOVIES_SUCCESS'\nconst DISCOVER_MOVIES_FAILURE = 'movie/DISCOVER_MOVIES_FAILURE'\n\nconst GET_MOVIE_REQUEST = 'movie/GET_MOVIE_REQUEST'\nconst GET_MOVIE_SUCCESS = 'movie/GET_MOVIE_SUCCESS'\nconst GET_MOVIE_FAILURE = 'movie/GET_MOVIE_FAILURE'\n\nconst GET_CREDITS_REQUEST = 'movie/GET_CREDITS_REQUEST'\nconst GET_CREDITS_SUCCESS = 'movie/GET_CREDITS_SUCCESS'\nconst GET_CREDITS_FAILURE = 'movie/GET_CREDITS_FAILURE'\n\nconst initialState = {\n  list: [],\n  movies: {},\n  credits: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case DISCOVER_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        // on this array we just keep the id's of the movies\n        // here lives our movies order\n        list: results.map(({ id }) => id),\n\n        // on this object we store all the returned movies from the api indexed by id\n        // we use this movie object as single source of truth\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    case SEARCH_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    case GET_MOVIE_SUCCESS: {\n      const { id, data: movie } = payload\n\n      return {\n        ...state,\n        movies: {\n          ...state.movies,\n          [id]: {\n            ...state.movies[id],\n            ...movie\n          }\n        }\n      }\n    }\n\n    case GET_CREDITS_SUCCESS: {\n      const { id, data } = payload\n\n      return {\n        ...state,\n        credits: {\n          ...state.credits,\n          [id]: data\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const discoverMovies = () => dispatch => dispatch({\n  type: DISCOVER_MOVIES_REQUEST,\n  meta: api.movie.discoverMovies()\n    .then(success(DISCOVER_MOVIES_SUCCESS))\n    .catch(failure(DISCOVER_MOVIES_FAILURE))\n})\n\n\nexport const getMovie = payload => dispatch => dispatch({\n  type: GET_MOVIE_REQUEST,\n  meta: api.movie.getMovie(payload)\n    .then(success(GET_MOVIE_SUCCESS, payload))\n    .catch(failure(GET_MOVIE_FAILURE))\n})\n\nexport const getCredits = payload => dispatch => dispatch({\n  type: GET_CREDITS_REQUEST,\n  meta: api.movie.getCredits(payload)\n    .then(success(GET_CREDITS_SUCCESS, payload))\n    .catch(failure(GET_CREDITS_FAILURE))\n})\n\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport config from './config'\nimport genre from './genre'\nimport layout from './layout'\nimport movie from './movie'\nimport search from './search'\n\nexport default combineReducers({\n  config,\n  genre,\n  layout,\n  movie,\n  search\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './module'\n\nconst enhancers = []\nconst middleware = [ thunk ]\n\n\nif( process.env.NODE_ENV === 'development' ){\n  if( typeof window.__REDUX_DEVTOOLS_EXTENSION__ === 'function' ){\n    enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__())\n  }\n\n  middleware.push(createLogger({\n    collapsed: true\n  }))\n}\n\n\nconst store = createStore(\n  reducer,\n  getState(),\n  compose(applyMiddleware(...middleware), ...enhancers)\n)\n\n\nstore.subscribe(() => {\n  const { config, genres } = store.getState()\n\n  // save configuration and genres states into localStorage\n  saveState({\n    config,\n    genres\n  })\n})\n\n\nfunction getState(){\n  try {\n    return JSON.parse(window.localStorage.getItem('d-movie-state')) || {}\n  }\n  catch (e) {\n    return {}\n  }\n}\n\n\nfunction saveState( state ){\n  try {\n    window.localStorage.setItem('d-movie-state', JSON.stringify(state))\n  }\n  catch (e) {}\n}\n\n\nexport default store\n","import { createSelector } from 'reselect'\n\nexport const getGenres = createSelector(\n  ({ genre }) => genre.genres,\n  ({ movie }) => movie.movies,\n  ({ id }) => id,\n  (genres, movies, id) => movies[id].genre_ids.map(id => genres[id])\n)\n","import { createSelector } from 'reselect'\n\nexport const getMovies = createSelector(\n  ({ movie }) => movie,\n  (movie) => (movie.list || []).map(id => movie.movies[id])\n)\n\nexport const getCast = createSelector(\n  ({ movie }) => movie.credits,\n  ({ id }) => id,\n  (credits, id) => credits[id] ? credits[id].cast.slice(0,3) : []\n)\n\nexport const getDirector = createSelector(\n  ({ movie }) => movie.credits,\n  ({ id }) => id,\n  (credits, id) => credits[id] ? credits[id].crew.find(crew => crew.job === 'Director') : null\n)\n\nexport const filterMovies = createSelector(\n  ({ movies }) => movies,\n  ({ rating }) => rating,\n  (movies, rating) => movies.filter(({ vote_average }) => vote_average && (vote_average >= rating && vote_average < rating + 2))\n)\n\nexport const getResults = createSelector(\n  ({ movie }) => movie,\n  ({ search }) => search,\n  (movie, search) => {\n    const { query, filter: { rating }, results } = search\n\n    let movies\n\n    if( query ){\n      movies = (results[query] || []).map(id => movie.movies[id])\n    }\n    else {\n      movies = getMovies({ movie })\n    }\n\n    if( rating !== null ){\n      return filterMovies({ movies, rating })\n    }\n\n    return movies\n  }\n)\n","import * as genre from './genre'\nimport * as movie from './movie'\n\nconst selector = {\n  genre,\n  movie\n}\n\nexport default selector\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport selector from './selector'\n\nimport * as config from './module/config'\nimport * as genre from './module/genre'\nimport * as layout from './module/layout'\nimport * as movie from './module/movie'\nimport * as search from './module/search'\n\n\nexport const action = {\n  config,\n  genre,\n  layout,\n  movie,\n  search\n}\n\n\nexport {\n  selector\n}\n\n\nexport const register = (mapStateToProps, actions, Component) => connect(\n  mapStateToProps,\n  actions && (dispatch => bindActionCreators(actions, dispatch))\n)(Component)\n","import React from 'react'\nimport { register, action } from 'redux/app'\n\n\nconst Header = ({ openSearch }) => (\n  <div className=\"ui-header\">\n    <div className=\"ui-header-title\">\n      <i className=\"icon-logo\" />\n      <h1>MUST WATCH</h1>\n    </div>\n\n    <div className=\"ui-header-search\" onClick={() => openSearch()}>\n      <i className=\"icon-search\" />\n    </div>\n  </div>\n)\n\nexport default register(\n  null,\n  {\n    openSearch: action.layout.openStack('search')\n  },\n  Header\n)\n","import React, { useRef } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport classnames from 'classnames'\n\nconst Layer = ({ className, children }) => {\n  const ref = useRef(null)\n  const arrayChildren = React.Children.toArray(children)\n\n  return (\n    <TransitionGroup component={null}>\n      {arrayChildren.map((child, i) => (\n        <CSSTransition nodeRef={ref} key={child.key} timeout={400}>\n          <div\n            ref={ref}\n            className={classnames('layer-wrap', className, {\n              active: i === arrayChildren.length - 1\n            })}\n          >\n            {child}\n          </div>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  )\n}\n\nexport default Layer\n","import { useEffect } from 'react'\n\nconst useLockScroll = () => {\n  useEffect(\n    () => {\n      document.body.style.overflow = 'hidden'\n\n      return () => document.body.removeAttribute('style')\n    }\n  )\n}\n\nexport default useLockScroll\n","import React from 'react'\nimport classnames from 'classnames'\nimport { useLockScroll } from 'hook'\n\nconst Stack = ({ className, closeStack, children }) => {\n  useLockScroll()\n\n  return (\n    <div className={classnames('ui-stack', className)}>\n      <div className=\"ui-stack-close\" onClick={closeStack}>\n        <i className=\"icon-close\" />\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nexport default Stack\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport { register } from 'redux/app'\n\nconst Poster = ({\n  size = 'w500',\n  backdrop = false,\n  onClick = null,\n  movie: { title, backdrop_path, poster_path },\n  config\n}) => {\n  const [loaded, setLoaded] = useState(false)\n\n  const path = backdrop ? backdrop_path || poster_path : poster_path\n\n  const posterUrl = [config.secure_base_url, size, path].join('')\n\n  const onLoad = () => {\n    setLoaded(true)\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      className={classnames('ui-poster', {\n        backdrop,\n        'has-click': onClick\n      })}\n    >\n      <div className={classnames(\"ui-poster-content\", { 'no-image': !path, loaded })}>\n        {path && (\n          <img\n            alt=\"\"\n            src={posterUrl}\n            onLoad={onLoad}\n          />\n        )}\n\n        {!path && !backdrop && (\n          <div className=\"ui-poster-title\">{title}</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default register(\n  ({ config, movie }, { id }) => ({\n    movie: movie.movies[id],\n    config: config.images\n  }),\n  null,\n  Poster\n)\n","import React from 'react'\nimport classnames from 'classnames'\n\nconst stars = [ ...Array(5).keys() ]\nconst range = 2\n\nconst Rating = ({ voteAverage, onChange }) => (\n  <div className=\"ui-rating\">\n    {stars.map(star => (\n      <i\n        key={star}\n        onClick={() => {\n          onChange && onChange(star)\n        }}\n        className={classnames('icon-star-outline', {\n          'icon-star-rate': voteAverage !== null && voteAverage >= star * range\n        })}\n      />\n    ))}\n  </div>\n)\n\nexport default Rating\n","import React from 'react'\nimport moment from 'moment'\n\nconst Info = ({ releaseDate, runTime }) => {\n  const info = []\n\n  if( releaseDate ){\n    info.push(\n      <span key={releaseDate}>{moment(releaseDate).format('Y')}</span>\n    )\n  }\n\n  if( runTime > 0 ){\n    const h = Math.floor(runTime / 60)\n    const m = Math.floor(runTime % 60 % 60)\n\n    info.push(\n      <span key={runTime} className=\"fade-in\">\n        {h > 0 && `${h}h`} {m > 0 && `${m}m`}\n      </span>\n    )\n  }\n\n  return (\n    <div className=\"ui-info\">\n      {info.reduce((prev, curr) => [prev, ' - ', curr])}\n    </div>\n  )\n}\n\nexport default Info","import React from 'react'\n\nconst Genres = ({ genres }) => (\n  <ul className=\"ui-genres\">\n    {genres.map(({ id, name }) => (\n      <li key={id}>\n        {name}\n      </li>\n    ))}\n  </ul>\n)\n\nexport default Genres","import React from 'react'\n\nconst Credits = ({ title, value }) => (\n  <div className=\"ui-credits\">\n    <div className=\"ui-credits-title\">\n      {title}\n    </div>\n    <div className=\"ui-credits-value\">\n      {value}\n    </div>\n  </div>\n)\n\nexport default Credits","import React from 'react'\nimport { register } from 'redux/app'\nimport Layer from 'component/Layout/Layer'\nimport MovieStack from 'component/Stack/Movie'\nimport SearchStack from 'component/Stack/Search'\n\n\nconst stackList = {\n  'movie': MovieStack,\n  'search': SearchStack\n}\n\n\nconst StackLayer = ({ stack, closeStack }) => (\n  <Layer className=\"ui-stack-layer\">\n    {stack.map(({ namespace, props }) => {\n\n      const Stack = stackList[namespace]\n\n      if( !Stack ){\n        return null\n      }\n\n      return (\n        <Stack\n          key={namespace}\n          {...props}\n        />\n       )\n    })}\n  </Layer>\n)\n\n\nexport default register(\n  ({ layout }) => ({\n    stack: layout.stack\n  }),\n  null,\n  StackLayer\n)\n","import React, { useEffect } from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport Rating from 'component/Rating'\nimport Info from 'component/Info'\nimport Genres from 'component/Genres'\nimport Credits from 'component/Credits'\n\n\nconst MovieStack = ({\n  id,\n  movie: { title, vote_average, release_date, runtime, overview },\n  genres,\n  cast,\n  director,\n  getMovie,\n  getCredits,\n  closeStack\n}) => {\n\n  useEffect(\n    () => {\n      getMovie({ id })\n      getCredits({ id })\n    },\n    [ id, getMovie, getCredits ]\n  )\n\n  return (\n    <Stack className=\"movie-stack\" closeStack={closeStack}>\n      <div className=\"movie-stack-backdrop\">\n        <Poster id={id} size=\"w1280\" backdrop />\n      </div>\n\n      <div className=\"movie-stack-content\">\n        <h1 className=\"movie-stack-title\">\n          {title}\n        </h1>\n\n        {vote_average > 0 && (\n          <div className=\"movie-stack-rating\">\n            <Rating voteAverage={vote_average} />\n          </div>\n        )}\n\n        {(release_date || runtime > 0) && (\n          <div className=\"movie-stack-info\">\n            <Info releaseDate={release_date} runTime={runtime} />\n          </div>\n        )}\n\n        <p className=\"movie-stack-overview\">\n          {overview}\n        </p>\n\n        {genres.length > 0 && (\n          <div className=\"movie-stack-genres\">\n            <Genres genres={genres} />\n          </div>\n        )}\n\n        {cast.length > 0 && (\n          <div className=\"movie-stack-credits fade-in\">\n            <Credits\n              title=\"Cast\"\n              value={cast.map(actor => actor.name).reduce((prev, curr) => [prev, ', ', curr])}\n            />\n          </div>\n        )}\n\n        {director && (\n          <div className=\"movie-stack-credits fade-in\">\n            <Credits\n              title=\"Director\"\n              value={director.name}\n            />\n          </div>\n        )}\n      </div>\n    </Stack>\n  )\n}\n\nexport default register(\n  ({ movie, genre }, { id }) => ({\n    movie: movie.movies[id],\n    genres: selector.genre.getGenres({ genre, movie, id }),\n    cast: selector.movie.getCast({ movie, id }),\n    director: selector.movie.getDirector({ movie, id })\n  }),\n  {\n    getMovie: action.movie.getMovie,\n    getCredits: action.movie.getCredits,\n    closeStack: action.layout.closeStack('movie')\n  },\n  MovieStack\n)\n","import React from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport Rating from 'component/Rating'\n\nconst SearchStack = ({\n  query,\n  filter,\n  results,\n  loading,\n  updateQuery,\n  updateFilter,\n  openMovie,\n  closeStack\n}) => {\n\n  const handleRatingChange = star => {\n    const rating = star * 2\n\n    updateFilter({\n      rating: rating === filter.rating ? null : rating\n    })\n  }\n\n  return (\n    <Stack className=\"search-stack\" closeStack={closeStack}>\n      <div className=\"search-stack-head\">\n        <div className=\"search-stack-input-wrapper\">\n          <input\n            autoFocus\n            type=\"text\"\n            placeholder=\"search movies\"\n            value={query}\n            onChange={event => updateQuery({ query: event.target.value })}\n            className=\"search-stack-input\"\n          />\n\n          <i className=\"icon-search\" />\n\n          <div className=\"search-stack-input-rating\">\n            <Rating\n              voteAverage={filter.rating}\n              onChange={handleRatingChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      {!loading && !results.length && (\n        <div className=\"search-stack-empty fade-in\">\n          <p>No movies found</p>\n        </div>\n      )}\n\n      {results.length > 0 && (\n        <div className=\"search-stack-grid\">\n          {results.map(({ id }) => (\n            <div key={id} className=\"search-stack-grid-item\">\n              <Poster id={id} size=\"w342\" onClick={() => openMovie({ id })} />\n            </div>\n          ))}\n        </div>\n      )}\n    </Stack>\n  )\n}\n\nexport default register(\n  ({ search, movie }) => ({\n    query: search.query,\n    filter: search.filter,\n    results: selector.movie.getResults({ movie, search }),\n    loading: search.loading[search.query]\n  }),\n  {\n    updateFilter: action.search.updateFilter,\n    updateQuery: action.search.updateQuery,\n    closeStack: action.layout.closeStack('search'),\n    openMovie: action.layout.openStack('movie')\n  },\n  SearchStack\n)\n","import React from 'react'\nimport classnames from 'classnames'\nimport Header from 'component/Layout/Header'\nimport StackLayer from 'component/Layout/Stack/Layer'\nimport { register } from 'redux/app'\n\nconst Layout = ({ stackOpen, children }) => (\n  <>\n    <main className={classnames('layer-main', { 'stack-open': stackOpen })}>\n      <div className=\"layer-main-header\">\n        <Header />\n      </div>\n\n      <div className=\"layer-main-content\">\n        {children}\n      </div>\n    </main>\n\n    <StackLayer />\n  </>\n)\n\nexport default register(\n  ({ layout }) => ({\n    stackOpen: layout.stack.length > 0\n  }),\n  null,\n  Layout\n)\n","import React, { useEffect } from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Poster from 'component/Poster'\n\nconst Main = ({ movies, discoverMovies, getConfiguration, getGenres, openMovie }) => {\n  useEffect(\n    () => {\n      discoverMovies()\n    },\n    [ discoverMovies ]\n  )\n\n  useEffect(\n    () => {\n      getConfiguration()\n    },\n    [ getConfiguration ]\n  )\n\n  useEffect(\n    () => {\n      getGenres()\n    },\n    [ getGenres ]\n  )\n\n  return (\n    <div className=\"movie-grid\">\n      {movies.map(({ id, title }) => (\n        <div key={id} className=\"movie-grid-item\">\n          <Poster id={id} onClick={() => openMovie({ id })} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\n\nexport default register(\n  ({ movie }) => ({\n    movies: selector.movie.getMovies({ movie })\n  }),\n  {\n    discoverMovies: action.movie.discoverMovies,\n    getConfiguration: action.config.getConfiguration,\n    getGenres: action.genre.getGenres,\n    openMovie: action.layout.openStack('movie')\n  },\n  Main\n)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from 'redux/store'\nimport Layout from 'component/Layout'\nimport Main from 'view/Main'\n\nimport 'asset/scss/app.scss'\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout>\n      <Main />\n    </Layout>\n  </Provider>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n)\n\nsetTimeout(() => root.classList.add('ready'), 1000)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}