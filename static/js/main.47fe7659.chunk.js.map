{"version":3,"sources":["redux/http/request.js","env.js","redux/http/success.js","redux/http/failure.js","redux/api/config.js","redux/api/genre.js","redux/api/movie.js","redux/api/index.js","redux/module/config.js","redux/module/genre.js","redux/module/layout.js","redux/module/movie.js","redux/module/index.js","redux/store.js","component/Layout/Header/Header.jsx","component/Layout/Layer/Layer.jsx","hook/useLockScroll.js","component/Layout/Stack/Stack.jsx","redux/selector/genre.js","redux/selector/movie.js","redux/selector/index.js","redux/app.js","component/Poster/Poster.jsx","component/Layout/Stack/Layer.jsx","component/Stack/Movie/Movie.jsx","component/Layout/Layout.jsx","view/Main/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["request","payload","axios","url","params","api_key","success","type","response","store","dispatch","data","failure","error","getConfiguration","method","getGenres","discoverMovies","api","config","genre","movie","GET_CONFIGURATION_SUCCESS","initialState","images","meta","then","catch","reducer","state","actionType","GET_GENRES_SUCCESS","genres","reduce","id","OPEN_STACK","CLOSE_STACK","stack","openStack","namespace","props","closeStack","filter","DISCOVER_MOVIES_SUCCESS","list","movies","results","map","combineReducers","layout","middleware","thunk","createStore","compose","applyMiddleware","Header","className","Layer","children","ref","useRef","arrayChildren","React","Children","toArray","TransitionGroup","component","child","i","CSSTransition","nodeRef","timeout","classnames","active","length","key","useLockScroll","useEffect","document","body","style","overflow","removeAttribute","Stack","closeEvent","event","keyCode","addEventListener","removeEventListener","onClick","createSelector","genre_ids","getMovies","movieId","selector","action","register","mapStateToProps","actions","Component","connect","bindActionCreators","size","backdrop","posterUrl","base_url","backdrop_path","poster_path","join","src","alt","stackList","title","moment","release_date","format","overview","name","vote_average","stackOpen","openMovie","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47fe7659.chunk.js","sourcesContent":["import axios from 'axios'\nimport { apiUrl, apiKey } from 'env'\n\nconst request = payload => axios({\n  ...payload,\n  url: apiUrl + payload.url,\n  params: {\n    ...(payload.params || {}),\n    api_key: apiKey\n  }\n})\n\nexport default request\n","// This data should be in a non-versioned .env file\n// In order to avoid environment setup and make it easier I just used this file\n\nexport const apiUrl = 'https://api.themoviedb.org/3'\nexport const apiKey = '0d350753f143701136974b765ca31ac5'\n","import store from 'redux/store'\n\nconst success = (type, payload = {}) => response => {\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      data: response.data\n    }\n  })\n\n  return result\n}\n\n\nexport default success\n","import store from 'redux/store'\n\nconst failure = (type, payload = {}) => error => {\n\n  const { data } = error.response || { data : {} }\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      error: data.error\n    }\n  })\n\n  return result\n}\n\n\nexport default failure\n","import { request } from 'redux/http'\n\nexport const getConfiguration = () => request({\n  method: 'GET',\n  url: '/configuration'\n})\n","import { request } from 'redux/http'\n\nexport const getGenres = () => request({\n  method: 'GET',\n  url: '/genre/movie/list'\n})\n","import { request } from 'redux/http'\n\nexport const discoverMovies = () => request({\n  method: 'GET',\n  url: '/discover/movie'\n})\n\n","import * as config from './config'\nimport * as genre from './genre'\nimport * as movie from './movie'\n\nconst api = {\n  config,\n  genre,\n  movie\n}\n\nexport default api\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_CONFIGURATION_REQUEST = 'config/GET_CONFIGURATION_REQUEST'\nconst GET_CONFIGURATION_SUCCESS = 'config/GET_CONFIGURATION_SUCCESS'\nconst GET_CONFIGURATION_FAILURE = 'config/GET_CONFIGURATION_FAILURE'\n\nconst initialState = {\n  images: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_CONFIGURATION_SUCCESS: {\n      const { images } = payload.data\n\n      return {\n        images\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getConfiguration = () => dispatch => dispatch({\n  type: GET_CONFIGURATION_REQUEST,\n  meta: api.config.getConfiguration()\n    .then(success(GET_CONFIGURATION_SUCCESS))\n    .catch(failure(GET_CONFIGURATION_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_GENRES_REQUEST = 'genre/GET_GENRES_REQUEST'\nconst GET_GENRES_SUCCESS = 'genre/GET_GENRES_SUCCESS'\nconst GET_GENRES_FAILURE = 'genre/GET_GENRES_FAILURE'\n\nconst initialState = {\n  genres: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_GENRES_SUCCESS: {\n      const { genres } = payload.data\n\n      return {\n        // Index genres by id for better access\n        genres: genres.reduce((genres, genre) => ({\n          ...genres,\n          [genre.id]: genre\n        }), {})\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getGenres = () => dispatch => dispatch({\n  type: GET_GENRES_REQUEST,\n  meta: api.genre.getGenres()\n    .then(success(GET_GENRES_SUCCESS))\n    .catch(failure(GET_GENRES_FAILURE))\n})\n\n\nexport default reducer\n","const OPEN_STACK  = 'layout/OPEN_STACK'\nconst CLOSE_STACK = 'layout/CLOSE_STACK'\n\nconst initialState = {\n  stack: []\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case OPEN_STACK: {\n      const { namespace, props } = payload\n\n      return {\n        ...state,\n        stack: [\n          ...state.stack,\n          {\n            namespace,\n            props: props || {}\n          }\n        ]\n      }\n    }\n\n    case CLOSE_STACK:\n      return {\n        ...state,\n        stack: state.stack.filter(({ namespace }) => namespace !== payload.namespace)\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const openStack = namespace => props => dispatch => dispatch({\n  type: OPEN_STACK,\n  payload: {\n    namespace,\n    props\n  }\n})\n\nexport const closeStack = namespace => () => dispatch => dispatch({\n  type: CLOSE_STACK,\n  payload: {\n    namespace\n  }\n})\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst DISCOVER_MOVIES_REQUEST = 'movie/DISCOVER_MOVIES_REQUEST'\nconst DISCOVER_MOVIES_SUCCESS = 'movie/DISCOVER_MOVIES_SUCCESS'\nconst DISCOVER_MOVIES_FAILURE = 'movie/DISCOVER_MOVIES_FAILURE'\n\nconst initialState = {\n  list: [],\n  movies: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case DISCOVER_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        // on this array we just keep the id's of the movies\n        // here lives our movies order\n        list: results.map(({ id }) => id),\n\n        // on this object we store all the returned movies from the api indexed by id\n        // we use this movie object as single source of truth\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const discoverMovies = () => dispatch => dispatch({\n  type: DISCOVER_MOVIES_REQUEST,\n  meta: api.movie.discoverMovies()\n    .then(success(DISCOVER_MOVIES_SUCCESS))\n    .catch(failure(DISCOVER_MOVIES_FAILURE))\n})\n\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport config from './config'\nimport genre from './genre'\nimport layout from './layout'\nimport movie from './movie'\n\nexport default combineReducers({\n  config,\n  genre,\n  layout,\n  movie\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './module'\n\nconst enhancers = []\nconst middleware = [ thunk ]\n\n\nif( process.env.NODE_ENV === 'development' ){\n  if( typeof window.__REDUX_DEVTOOLS_EXTENSION__ === 'function' ){\n    enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__())\n  }\n\n  middleware.push(createLogger({\n    collapsed: true\n  }))\n}\n\n\nconst store = createStore(\n  reducer,\n  {},\n  compose(applyMiddleware(...middleware), ...enhancers)\n)\n\n\nexport default store\n","import React from 'react'\n\nconst Header = () => (\n  <div className=\"ui-header\">\n    <div className=\"ui-header-title\">\n      <h1>MUST WATCH</h1>\n    </div>\n\n    <div className=\"ui-header-search\">\n      <i className=\"icon-search\" />\n    </div>\n  </div>\n)\n\nexport default Header\n","import React, { useRef } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport classnames from 'classnames'\n\nconst Layer = ({ className, children }) => {\n  const ref = useRef(null)\n  const arrayChildren = React.Children.toArray(children)\n\n  return (\n    <TransitionGroup component={null}>\n      {arrayChildren.map((child, i) => (\n        <CSSTransition nodeRef={ref} key={child.key} timeout={400}>\n          <div\n            ref={ref}\n            className={classnames('layer-wrap', className, {\n              active: i === arrayChildren.length - 1\n            })}\n          >\n            {child}\n          </div>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  )\n}\n\nexport default Layer\n","import { useEffect } from 'react'\n\nconst useLockScroll = () => {\n  useEffect(\n    () => {\n      document.body.style.overflow = 'hidden'\n\n      return () => document.body.removeAttribute('style')\n    }\n  )\n}\n\nexport default useLockScroll\n","import React, { useEffect } from 'react'\nimport classnames from 'classnames'\nimport { useLockScroll } from 'hook'\n\nconst Stack = ({ className, closeStack, children }) => {\n  useLockScroll()\n\n  useEffect(\n    () => {\n      const closeEvent = event => {\n        if( event.keyCode === 27 ){\n          closeStack()\n        }\n      }\n\n      document.addEventListener('keydown', closeEvent)\n\n      return () => {\n        document.removeEventListener('keydown', closeEvent)\n      }\n    },\n    [ closeStack ]\n  )\n\n  return (\n    <div className={classnames('ui-stack', className)}>\n      <div className=\"ui-stack-close\" onClick={closeStack}>\n        <i className=\"icon-close\" />\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nexport default Stack\n","import { createSelector } from 'reselect'\n\nexport const getGenres = createSelector(\n  ({ genre }) => genre.genres,\n  ({ movie }) => movie.genre_ids,\n  (genres, genre_ids) => genre_ids.map(id => genres[id])\n)\n","import { createSelector } from 'reselect'\n\nexport const getMovies = createSelector(\n  ({ movie }) => movie,\n  (movie) => (movie.list || []).map(movieId => movie.movies[movieId])\n)\n","import * as genre from './genre'\nimport * as movie from './movie'\n\nconst selector = {\n  genre,\n  movie\n}\n\nexport default selector\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport selector from './selector'\n\nimport * as config from './module/config'\nimport * as genre from './module/genre'\nimport * as layout from './module/layout'\nimport * as movie from './module/movie'\n\n\nexport const action = {\n  config,\n  genre,\n  layout,\n  movie\n}\n\n\nexport {\n  selector\n}\n\n\nexport const register = (mapStateToProps, actions, Component) => connect(\n  mapStateToProps,\n  actions && (dispatch => bindActionCreators(actions, dispatch))\n)(Component)\n","import React from 'react'\nimport { register } from 'redux/app'\n\nconst Poster = ({ size = 'w500', backdrop = false, movie, config }) => {\n\n  const posterUrl = [\n    config.base_url,\n    size,\n    backdrop ? movie.backdrop_path : movie.poster_path\n  ].join('')\n\n  return (\n    <div className=\"ui-poster\">\n      <img src={posterUrl} alt=\"\" />\n    </div>\n  )\n}\n\nexport default register(\n  ({ config, movie }, { id }) => ({\n    movie: movie.movies[id],\n    config: config.images\n  }),\n  null,\n  Poster\n)\n","import React from 'react'\nimport Layer from 'component/Layout/Layer'\nimport MovieStack from 'component/Stack/Movie'\nimport { register } from 'redux/app'\n\nconst stackList = {\n  'movie': MovieStack\n}\n\nconst StackLayer = ({ stack, closeStack }) => (\n  <Layer className=\"ui-stack-layer\">\n    {stack.map(({ namespace, props }) => {\n\n      const Stack = stackList[namespace]\n\n      if( !Stack ){\n        return null\n      }\n\n      return (\n        <Stack\n          key={namespace}\n          {...props}\n        />\n       )\n    })}\n  </Layer>\n)\n\n\nexport default register(\n  ({ layout }) => ({\n    stack: layout.stack\n  }),\n  null,\n  StackLayer\n)\n","import React from 'react'\nimport moment from 'moment'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport { register, selector, action } from 'redux/app'\n\nconst MovieStack = ({ movie, genres, closeStack }) => (\n  <Stack className=\"movie-stack\" closeStack={closeStack}>\n    <div className=\"movie-stack-backdrop\">\n      <Poster id={movie.id} size=\"w1280\" backdrop />\n    </div>\n\n    <div className=\"movie-stack-content\">\n      <h1 className=\"movie-stack-title\">\n        {movie.title}\n      </h1>\n      <div className=\"movie-stack-date\">\n        {moment(movie.release_date).format('Y')}\n      </div>\n      <p className=\"movie-stack-overview\">\n        {movie.overview}\n      </p>\n\n      {genres.length > 0 && (\n        <ul className=\"movie-stack-genres\">\n          {genres.map(({ id, name }) => (\n            <li key={id}>\n              {name}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      <div className=\"movie-stack-rating\">\n        <div className=\"movie-stack-rating-number\">\n          {movie.vote_average}\n        </div>\n      </div>\n    </div>\n  </Stack>\n)\n\nexport default register(\n  ({ movie, genre }, { id }) => ({\n    movie: movie.movies[id],\n    genres: selector.genre.getGenres({\n      genre,\n      movie: movie.movies[id]\n    })\n  }),\n  {\n    closeStack: action.layout.closeStack('movie')\n  },\n  MovieStack\n)\n","import React from 'react'\nimport classnames from 'classnames'\nimport Header from 'component/Layout/Header'\nimport StackLayer from 'component/Layout/Stack/Layer'\nimport { register } from 'redux/app'\n\nconst Layout = ({ stackOpen, children }) => (\n  <>\n    <main className={classnames('layer-main', { 'stack-open': stackOpen })}>\n      <div className=\"layer-main-header\">\n        <Header />\n      </div>\n\n      <div className=\"layer-main-content\">\n        {children}\n      </div>\n    </main>\n\n    <StackLayer />\n  </>\n)\n\nexport default register(\n  ({ layout }) => ({\n    stackOpen: layout.stack.length > 0\n  }),\n  null,\n  Layout\n)\n","import React, { useEffect } from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Poster from 'component/Poster'\n\nconst Main = ({ movies, discoverMovies, getConfiguration, getGenres, openMovie }) => {\n  useEffect(\n    () => {\n      discoverMovies()\n    },\n    [ discoverMovies ]\n  )\n\n  useEffect(\n    () => {\n      getConfiguration()\n    },\n    [ getConfiguration ]\n  )\n\n  useEffect(\n    () => {\n      getGenres()\n    },\n    [ getGenres ]\n  )\n\n  return (\n    <div className=\"movie-grid\">\n      {movies.map(({ id, title }) => (\n        <div key={id} className=\"movie-grid-item\" onClick={() => openMovie({ id })}>\n          <Poster id={id} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\n\nexport default register(\n  ({ movie }) => ({\n    movies: selector.movie.getMovies({ movie })\n  }),\n  {\n    discoverMovies: action.movie.discoverMovies,\n    getConfiguration: action.config.getConfiguration,\n    getGenres: action.genre.getGenres,\n    openMovie: action.layout.openStack('movie')\n  },\n  Main\n)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from 'redux/store'\nimport Layout from 'component/Layout'\nimport Main from 'view/Main'\n\nimport 'asset/scss/app.scss'\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout>\n      <Main />\n    </Layout>\n  </Provider>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}