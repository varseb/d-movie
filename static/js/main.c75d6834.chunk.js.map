{"version":3,"sources":["redux/http/request.js","env.js","redux/http/success.js","redux/http/failure.js","redux/api/config.js","redux/api/genre.js","redux/api/movie.js","redux/api/search.js","redux/api/index.js","redux/module/config.js","redux/module/genre.js","redux/module/layout.js","redux/module/search.js","redux/module/movie.js","redux/module/index.js","redux/store.js","redux/selector/genre.js","redux/selector/movie.js","redux/selector/index.js","redux/app.js","component/Layout/Header/Header.jsx","component/Layout/Layer/Layer.jsx","hook/useLockScroll.js","component/Layout/Stack/Stack.jsx","component/Poster/Poster.jsx","component/Rating/Rating.jsx","component/Genres/Genres.jsx","component/Layout/Stack/Layer.jsx","component/Stack/Movie/Movie.jsx","component/Stack/Search/Search.jsx","component/Layout/Layout.jsx","view/Main/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["request","payload","axios","url","params","api_key","success","type","response","store","dispatch","data","failure","error","getConfiguration","method","getGenres","discoverMovies","searchMovies","query","api","config","genre","movie","search","GET_CONFIGURATION_SUCCESS","initialState","images","meta","then","catch","reducer","state","actionType","GET_GENRES_SUCCESS","genres","reduce","id","OPEN_STACK","CLOSE_STACK","stack","openStack","namespace","props","closeStack","filter","UPDATE_QUERY","UPDATE_FILTER","SEARCH_MOVIES_SUCCESS","rating","results","updateFilter","updateQuery","map","DISCOVER_MOVIES_SUCCESS","list","movies","combineReducers","layout","middleware","thunk","createStore","compose","applyMiddleware","createSelector","genre_ids","getMovies","filterMovies","vote_average","getResults","selector","action","register","mapStateToProps","actions","Component","connect","bindActionCreators","openSearch","className","onClick","Layer","children","ref","useRef","arrayChildren","React","Children","toArray","TransitionGroup","component","child","i","CSSTransition","nodeRef","timeout","classnames","active","length","key","useLockScroll","useEffect","document","body","style","overflow","removeAttribute","Stack","size","backdrop","useState","loaded","setLoaded","posterUrl","base_url","backdrop_path","poster_path","join","alt","src","onLoad","stars","Array","keys","Rating","voteAverage","onChange","star","Genres","name","stackList","title","release_date","moment","format","overview","openMovie","autoFocus","placeholder","value","event","target","stackOpen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","getElementById","ReactDOM","render","StrictMode"],"mappings":"s2CAYeA,EATC,SAAAC,GAAO,OAAIC,IAAM,2BAC5BD,GAD2B,IAE9BE,ICFoB,+BDENF,EAAQE,IACtBC,OAAO,2BACDH,EAAQG,QAAU,IADlB,IAEJC,QCJkB,yCCYPC,EAdC,SAACC,GAAD,IAAON,EAAP,uDAAiB,GAAjB,OAAwB,SAAAO,GAUtC,OAReC,GAAMC,SAAS,CAC5BH,OACAN,QAAQ,2BACHA,GADE,IAELU,KAAMH,EAASG,WCUNC,EAhBC,SAACL,GAAD,IAAON,EAAP,uDAAiB,GAAjB,OAAwB,SAAAY,GAAU,IAExCF,GAASE,EAAML,UAAY,CAAEG,KAAO,KAApCA,KAUR,OAReF,GAAMC,SAAS,CAC5BH,OACAN,QAAQ,2BACHA,GADE,IAELY,MAAOF,EAAKE,YCRLC,EAAmB,kBAAMd,EAAQ,CAC5Ce,OAAQ,MACRZ,IAAK,oBCFMa,EAAY,kBAAMhB,EAAQ,CACrCe,OAAQ,MACRZ,IAAK,uBCFMc,EAAiB,kBAAMjB,EAAQ,CAC1Ce,OAAQ,MACRZ,IAAK,qBCFMe,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAenB,EAAQ,CACjDe,OAAQ,MACRZ,IAAK,gBACLC,OAAQ,CACNe,YCMWC,EAPH,CACVC,SACAC,QACAC,QACAC,UCLIC,EAA4B,mCAG5BC,EAAe,CACnBC,OAAQ,IAmBGb,EAAmB,kBAAM,SAAAJ,GAAQ,OAAIA,EAAS,CACzDH,KAzBgC,mCA0BhCqB,KAAMR,EAAIC,OAAOP,mBACde,KAAKvB,EAAQmB,IACbK,MAAMlB,EA1BuB,yCA8BnBmB,EAxBC,WAA0D,IAAzDC,EAAwD,uDAAhDN,EAAgD,yCAA1BO,EAA0B,EAAhC1B,KAAkBN,EAAc,EAAdA,QACzD,OAAQgC,GACN,KAAKR,EAA4B,IACvBE,EAAW1B,EAAQU,KAAnBgB,OAER,MAAO,CACLA,UAIJ,QACE,OAAOK,I,OClBPE,EAAqB,2BAGrBR,EAAe,CACnBS,OAAQ,IAuBGnB,EAAY,kBAAM,SAAAN,GAAQ,OAAIA,EAAS,CAClDH,KA7ByB,2BA8BzBqB,KAAMR,EAAIE,MAAMN,YACba,KAAKvB,EAAQ4B,IACbJ,MAAMlB,EA9BgB,iCAkCZmB,EA5BC,WAA0D,IAAzDC,EAAwD,uDAAhDN,EAAgD,yCAA1BO,EAA0B,EAAhC1B,KAAkBN,EAAc,EAAdA,QACzD,OAAQgC,GACN,KAAKC,EAAqB,IAChBC,EAAWlC,EAAQU,KAAnBwB,OAER,MAAO,CAELA,OAAQA,EAAOC,QAAO,SAACD,EAAQb,GAAT,mBAAC,eAClBa,GADiB,kBAEnBb,EAAMe,GAAKf,MACV,KAIR,QACE,OAAOU,I,QC1BPM,EAAc,oBACdC,EAAc,qBAEdb,EAAe,CACnBc,MAAO,IA+BIC,EAAY,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAAI,SAAAjC,GAAQ,OAAIA,EAAS,CAClEH,KAAM+B,EACNrC,QAAS,CACPyC,YACAC,cAISC,EAAa,SAAAF,GAAS,OAAI,kBAAM,SAAAhC,GAAQ,OAAIA,EAAS,CAChEH,KAAMgC,EACNtC,QAAS,CACPyC,kBAIWX,EA3CC,WAA0D,IAAzDC,EAAwD,uDAAhDN,EAAgD,yCAA1BO,EAA0B,EAAhC1B,KAAkBN,EAAc,EAAdA,QACzD,OAAQgC,GACN,KAAKK,EAAa,IACRI,EAAqBzC,EAArByC,UAAWC,EAAU1C,EAAV0C,MAEnB,OAAO,2BACFX,GADL,IAEEQ,MAAM,GAAD,mBACAR,EAAMQ,OADN,CAEH,CACEE,YACAC,MAAOA,GAAS,QAMxB,KAAKJ,EACH,OAAO,2BACFP,GADL,IAEEQ,MAAOR,EAAMQ,MAAMK,QAAO,qBAAGH,YAA8BzC,EAAQyC,eAGvE,QACE,OAAOV,IC5BPc,EAAe,sBAEfC,EAAgB,uBAGhBC,EAAwB,+BAGxBtB,EAAe,CACnBP,MAAO,GACP0B,OAAQ,CACNI,OAAQ,MAEVC,QAAS,IA2CEC,EAAe,SAAAlD,GAAO,OAAI,SAAAS,GAAQ,OAAIA,EAAS,CAC1DH,KAAMwC,EACN9C,cAGWmD,GAAc,SAAAnD,GAAO,OAAI,SAAAS,GACpCA,EAAS,CACPH,KAAMuC,EACN7C,YAGEA,EAAQkB,OACVT,EAASQ,GAAajB,MAIbiB,GAAe,SAAAjB,GAAO,OAAI,SAAAS,GAAQ,OAAIA,EAAS,CAC1DH,KArE4B,+BAsE5BqB,KAAMR,EAAII,OAAON,aAAajB,GAC3B4B,KAAKvB,EAAQ0C,EAAuB/C,IACpC6B,MAAMlB,EAtEmB,qCA0EfmB,GAhEC,WAA0D,IAAzDC,EAAwD,uDAAhDN,EAAgD,yCAA1BO,EAA0B,EAAhC1B,KAAkBN,EAAc,EAAdA,QACzD,OAAQgC,GACN,KAAKa,EACH,OAAO,2BACFd,GADL,IAEEb,MAAOlB,EAAQkB,QAGnB,KAAK4B,EACH,OAAO,2BACFf,GADL,IAEEa,OAAO,2BACFb,EAAMa,QACN5C,KAIT,KAAK+C,EAAwB,IACnB7B,EAA6BlB,EAA7BkB,MAAe+B,EAAcjD,EAAtBU,KAAQuC,QAGvB,OAAO,2BACFlB,GADL,IAEEkB,QAAQ,2BACHlB,EAAMkB,SADJ,kBAEJ/B,EAAQ+B,EAAQG,KAAI,qBAAGhB,UAK9B,QACE,OAAOL,IC5CPsB,GAA0B,gCAG1B5B,GAAe,CACnB6B,KAAM,GACNC,OAAQ,IAyCGvC,GAAiB,kBAAM,SAAAP,GAAQ,OAAIA,EAAS,CACvDH,KAhD8B,gCAiD9BqB,KAAMR,EAAIG,MAAMN,iBACbY,KAAKvB,EAAQgD,KACbxB,MAAMlB,EAjDqB,sCAqDjBmB,GA9CC,WAA0D,IAAzDC,EAAwD,uDAAhDN,GAAgD,yCAA1BO,EAA0B,EAAhC1B,KAAkBN,EAAc,EAAdA,QACzD,OAAQgC,GACN,KAAKqB,GAA0B,IACrBJ,EAAYjD,EAAQU,KAApBuC,QAER,OAAO,2BACFlB,GADL,IAIEuB,KAAML,EAAQG,KAAI,qBAAGhB,MAIrBmB,OAAQN,EAAQd,QAAO,SAACoB,EAAQjC,GAAT,mBAAC,eACnBiC,GADkB,kBAEpBjC,EAAMc,GAAKd,MAFN,eAGCS,EAAMwB,WAInB,KAAKR,EAAwB,IACnBE,EAAYjD,EAAQU,KAApBuC,QAER,OAAO,2BACFlB,GADL,IAEEwB,OAAQN,EAAQd,QAAO,SAACoB,EAAQjC,GAAT,mBAAC,eACnBiC,GADkB,kBAEpBjC,EAAMc,GAAKd,MAFN,eAGCS,EAAMwB,WAInB,QACE,OAAOxB,ICxCEyB,eAAgB,CAC7BpC,SACAC,QACAoC,SACAnC,SACAC,YCNImC,GAAa,CAAEC,KAcrB,IAOenD,GAPDoD,YACZ9B,GACA,GACA+B,IAAO,WAAP,GAAQC,IAAe,WAAf,EAAmBJ,KAA3B,OAlBgB,M,4BCHL3C,GAAYgD,cACvB,qBAAG1C,MAAkBa,UACrB,qBAAGZ,MAAkB0C,aACrB,SAAC9B,EAAQ8B,GAAT,OAAuBA,EAAUZ,KAAI,SAAAhB,GAAE,OAAIF,EAAOE,SCHvC6B,GAAYF,cACvB,qBAAGzC,SACH,SAACA,GAAD,OAAYA,EAAMgC,MAAQ,IAAIF,KAAI,SAAAhB,GAAE,OAAId,EAAMiC,OAAOnB,SAG1C8B,GAAeH,cAC1B,qBAAGR,UACH,qBAAGP,UACH,SAACO,EAAQP,GAAT,OAAoBO,EAAOX,QAAO,gBAAGuB,EAAH,EAAGA,aAAH,OAAsBA,GAAiBA,GAAgBnB,GAAUmB,EAAenB,EAAS,QAGhHoB,GAAaL,cACxB,qBAAGzC,SACH,qBAAGC,UACH,SAACD,EAAOC,GAAY,IAGdgC,EAFIrC,EAAuCK,EAAvCL,MAAiB8B,EAAsBzB,EAAhCqB,OAAUI,OAAUC,EAAY1B,EAAZ0B,QAWnC,OANEM,EADErC,GACQ+B,EAAQ/B,IAAU,IAAIkC,KAAI,SAAAhB,GAAE,OAAId,EAAMiC,OAAOnB,MAG9C6B,GAAU,CAAE3C,UAGR,OAAX0B,EACKkB,GAAa,CAAEX,SAAQP,WAGzBO,KCxBIc,GALE,CACfhD,QACAC,SCMWgD,GAAS,CACpBlD,SACAC,QACAoC,SACAnC,QACAC,UASWgD,GAAW,SAACC,EAAiBC,EAASC,GAA3B,OAAyCC,YAC/DH,EACAC,GAAY,SAAAhE,GAAQ,OAAImE,YAAmBH,EAAShE,IAFWkE,CAG/DD,ICbaH,MACb,KACA,CACEM,WAAYP,GAAOb,OAAOjB,UAAU,YAfzB,SAAC,GAAD,IAAGqC,EAAH,EAAGA,WAAH,OACb,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,8CAGF,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAMF,KAAjD,SACE,mBAAGC,UAAU,wB,kBCgBJE,GAtBD,SAAC,GAA6B,IAA3BF,EAA0B,EAA1BA,UAAWG,EAAe,EAAfA,SACpBC,EAAMC,iBAAO,MACbC,EAAgBC,IAAMC,SAASC,QAAQN,GAE7C,OACE,cAACO,GAAA,EAAD,CAAiBC,UAAW,KAA5B,SACGL,EAAchC,KAAI,SAACsC,EAAOC,GAAR,OACjB,cAACC,GAAA,EAAD,CAAeC,QAASX,EAAqBY,QAAS,IAAtD,SACE,qBACEZ,IAAKA,EACLJ,UAAWiB,KAAW,aAAcjB,EAAW,CAC7CkB,OAAQL,IAAMP,EAAca,OAAS,IAHzC,SAMGP,KAP6BA,EAAMQ,W,oBCCjCC,GAVO,WACpBC,qBACE,WAGE,OAFAC,SAASC,KAAKC,MAAMC,SAAW,SAExB,kBAAMH,SAASC,KAAKG,gBAAgB,cCWlCC,GAdD,SAAC,GAAyC,IAAvC5B,EAAsC,EAAtCA,UAAWnC,EAA2B,EAA3BA,WAAYsC,EAAe,EAAfA,SAGtC,OAFAkB,KAGE,sBAAKrB,UAAWiB,KAAW,WAAYjB,GAAvC,UACE,qBAAKA,UAAU,iBAAiBC,QAASpC,EAAzC,SACE,mBAAGmC,UAAU,iBAGdG,M,SCsBQV,OACb,kBAAGnD,EAAH,EAAGA,OAAQE,EAAX,EAAWA,MAAWc,EAAtB,EAAsBA,GAAtB,MAAgC,CAC9Bd,MAAOA,EAAMiC,OAAOnB,GACpBhB,OAAQA,EAAOM,UAEjB,MApCa,SAAC,GAMT,IAAD,IALJiF,YAKI,MALG,OAKH,MAJJC,gBAII,aAHJ7B,eAGI,MAHM,KAGN,EAFJzD,EAEI,EAFJA,MACAF,EACI,EADJA,OACI,EACwByF,oBAAS,GADjC,oBACGC,EADH,KACWC,EADX,KAGEC,EAAY,CAChB5F,EAAO6F,SACPN,EACAC,EAAWtF,EAAM4F,cAAgB5F,EAAM6F,aACvCC,KAAK,IAMP,OACE,qBAAKtC,UAAWiB,KAAW,YAAa,CAAE,YAAahB,IAAYA,QAASA,EAA5E,SACE,qBACEsC,IAAI,GACJvC,UAAWiB,KAAW,CAAEe,WACxBQ,IAAKN,EACLO,OAVS,WACbR,GAAU,WCjBRS,GAAK,YAAQC,MAAM,GAAGC,QAmBbC,GAhBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,SAAhB,OACb,qBAAK/C,UAAU,YAAf,SACG0C,GAAMpE,KAAI,SAAA0E,GAAI,OACb,mBAEE/C,QAAS,WACP8C,GAAYA,EAASC,IAEvBhD,UAAWiB,KAAW,oBAAqB,CACzC,iBAAkC,OAAhB6B,GAAwBA,GAXtC,EAWqDE,KALtDA,SCEEC,GAVA,SAAC,GAAD,IAAG7F,EAAH,EAAGA,OAAH,OACb,oBAAI4C,UAAU,YAAd,SACG5C,EAAOkB,KAAI,gBAAGhB,EAAH,EAAGA,GAAI4F,EAAP,EAAOA,KAAP,OACV,6BACGA,GADM5F,SCET6F,GAAY,CAChB,MCqCa1D,IACb,kBAAGjD,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAWe,EAArB,EAAqBA,GAArB,MAA+B,CAC7Bd,MAAOA,EAAMiC,OAAOnB,GACpBF,OAAQmC,GAAShD,MAAMN,UAAU,CAC/BM,QACAC,MAAOA,EAAMiC,OAAOnB,QAGxB,CACEO,WAAY2B,GAAOb,OAAOd,WAAW,WA7CtB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOY,EAAV,EAAUA,OAAQS,EAAlB,EAAkBA,WAAlB,OACjB,eAAC,GAAD,CAAOmC,UAAU,cAAcnC,WAAYA,EAA3C,UACE,qBAAKmC,UAAU,uBAAf,SACE,cAAC,GAAD,CAAQ1C,GAAId,EAAMc,GAAIuE,KAAK,QAAQC,UAAQ,MAG7C,sBAAK9B,UAAU,sBAAf,UACE,oBAAIA,UAAU,oBAAd,SACGxD,EAAM4G,QAGR5G,EAAM6C,aAAe,GACpB,qBAAKW,UAAU,qBAAf,SACE,cAAC,GAAD,CAAQ8C,YAAatG,EAAM6C,iBAI9B7C,EAAM6G,cACL,qBAAKrD,UAAU,mBAAf,SACGsD,KAAO9G,EAAM6G,cAAcE,OAAO,OAIvC,mBAAGvD,UAAU,uBAAb,SACGxD,EAAMgH,WAGRpG,EAAO+D,OAAS,GACf,qBAAKnB,UAAU,qBAAf,SACE,cAAC,GAAD,CAAQ5C,OAAQA,eD7BxB,OEoDaqC,IACb,gBAAGhD,EAAH,EAAGA,OAAQD,EAAX,EAAWA,MAAX,MAAwB,CACtBJ,MAAOK,EAAOL,MACd0B,OAAQrB,EAAOqB,OACfK,QAASoB,GAAS/C,MAAM8C,WAAW,CACjC9C,QACAC,cAGJ,CACE2B,aAAcoB,GAAO/C,OAAO2B,aAC5BC,YAAamB,GAAO/C,OAAO4B,YAC3BR,WAAY2B,GAAOb,OAAOd,WAAW,UACrC4F,UAAWjE,GAAOb,OAAOjB,UAAU,WApEnB,SAAC,GAQd,IAPLtB,EAOI,EAPJA,MACA0B,EAMI,EANJA,OACAK,EAKI,EALJA,QACAE,EAII,EAJJA,YACAD,EAGI,EAHJA,aACAqF,EAEI,EAFJA,UACA5F,EACI,EADJA,WAWA,OACE,eAAC,GAAD,CAAOmC,UAAU,eAAenC,WAAYA,EAA5C,UACE,qBAAKmC,UAAU,oBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,uBACE0D,WAAS,EACTlI,KAAK,OACLmI,YAAY,gBACZC,MAAOxH,EACP2G,SAAU,SAAAc,GAAK,OAAIxF,EAAY,CAAEjC,MAAOyH,EAAMC,OAAOF,SACrD5D,UAAU,uBAGZ,mBAAGA,UAAU,gBAEb,qBAAKA,UAAU,4BAAf,SACE,cAAC,GAAD,CACE8C,YAAahF,EAAOI,OACpB6E,SA1Be,SAAAC,GACzB,IAAM9E,EAAgB,EAAP8E,EAEf5E,EAAa,CACXF,OAAQA,IAAWJ,EAAOI,OAAS,KAAOA,cA4BzCC,EAAQgD,OAAS,GAChB,qBAAKnB,UAAU,oBAAf,SACG7B,EAAQG,KAAI,gBAAGhB,EAAH,EAAGA,GAAH,OACX,qBAAc0C,UAAU,yBAAxB,SACE,cAAC,GAAD,CAAQ1C,GAAIA,EAAIuE,KAAK,OAAO5B,QAAS,kBAAMwD,EAAU,CAAEnG,WAD/CA,eFjBPmC,OACb,kBAAiB,CACfhC,MADF,EAAGkB,OACalB,SAEhB,MAzBiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAH,EAAUI,WAAV,OACjB,cAAC,GAAD,CAAOmC,UAAU,iBAAjB,SACGvC,EAAMa,KAAI,YAA2B,IAAxBX,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAEjBgE,EAAQuB,GAAUxF,GAExB,OAAKiE,EAKH,cAACA,EAAD,eAEMhE,GADCD,GALA,aGEA8B,OACb,kBAAiB,CACfsE,UADF,EAAGpF,OACiBlB,MAAM0D,OAAS,KAEnC,MApBa,SAAC,GAAD,IAAG4C,EAAH,EAAGA,UAAW5D,EAAd,EAAcA,SAAd,OACb,qCACE,uBAAMH,UAAWiB,KAAW,aAAc,CAAE,aAAc8C,IAA1D,UACE,qBAAK/D,UAAU,oBAAf,SACE,cAAC,GAAD,MAGF,qBAAKA,UAAU,qBAAf,SACGG,OAIL,cAAC,GAAD,UCoBWV,OACb,gBAAGjD,EAAH,EAAGA,MAAH,MAAgB,CACdiC,OAAQc,GAAS/C,MAAM2C,UAAU,CAAE3C,aAErC,CACEN,eAAgBsD,GAAOhD,MAAMN,eAC7BH,iBAAkByD,GAAOlD,OAAOP,iBAChCE,UAAWuD,GAAOjD,MAAMN,UACxBwH,UAAWjE,GAAOb,OAAOjB,UAAU,WA1C1B,SAAC,GAAwE,IAAtEe,EAAqE,EAArEA,OAAQvC,EAA6D,EAA7DA,eAAgBH,EAA6C,EAA7CA,iBAAkBE,EAA2B,EAA3BA,UAAWwH,EAAgB,EAAhBA,UAsBnE,OArBAnC,qBACE,WACEpF,MAEF,CAAEA,IAGJoF,qBACE,WACEvF,MAEF,CAAEA,IAGJuF,qBACE,WACErF,MAEF,CAAEA,IAIF,qBAAK+D,UAAU,aAAf,SACGvB,EAAOH,KAAI,gBAAGhB,EAAH,EAAGA,GAAH,EAAO8F,MAAP,OACV,qBAAcpD,UAAU,kBAAxB,SACE,cAAC,GAAD,CAAQ1C,GAAIA,EAAI2C,QAAS,kBAAMwD,EAAU,CAAEnG,WADnCA,WCbH0G,I,MARH,kBACV,cAAC,IAAD,CAAUtI,MAAOA,GAAjB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,UCCSuI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrH,MAAK,YAAkD,IAA/CsH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFRO,GAAOlD,SAASmD,eAAe,QAErCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFJ,IAMFR,O","file":"static/js/main.c75d6834.chunk.js","sourcesContent":["import axios from 'axios'\nimport { apiUrl, apiKey } from 'env'\n\nconst request = payload => axios({\n  ...payload,\n  url: apiUrl + payload.url,\n  params: {\n    ...(payload.params || {}),\n    api_key: apiKey\n  }\n})\n\nexport default request\n","// This data should be in a non-versioned .env file\n// In order to avoid environment setup and make it easier I just used this file\n\nexport const apiUrl = 'https://api.themoviedb.org/3'\nexport const apiKey = '0d350753f143701136974b765ca31ac5'\n","import store from 'redux/store'\n\nconst success = (type, payload = {}) => response => {\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      data: response.data\n    }\n  })\n\n  return result\n}\n\n\nexport default success\n","import store from 'redux/store'\n\nconst failure = (type, payload = {}) => error => {\n\n  const { data } = error.response || { data : {} }\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      error: data.error\n    }\n  })\n\n  return result\n}\n\n\nexport default failure\n","import { request } from 'redux/http'\n\nexport const getConfiguration = () => request({\n  method: 'GET',\n  url: '/configuration'\n})\n","import { request } from 'redux/http'\n\nexport const getGenres = () => request({\n  method: 'GET',\n  url: '/genre/movie/list'\n})\n","import { request } from 'redux/http'\n\nexport const discoverMovies = () => request({\n  method: 'GET',\n  url: '/discover/movie'\n})\n\n","import { request } from 'redux/http'\n\nexport const searchMovies = ({ query }) => request({\n  method: 'GET',\n  url: '/search/movie',\n  params: {\n    query\n  }\n})\n\n","import * as config from './config'\nimport * as genre from './genre'\nimport * as movie from './movie'\nimport * as search from './search'\n\nconst api = {\n  config,\n  genre,\n  movie,\n  search\n}\n\nexport default api\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_CONFIGURATION_REQUEST = 'config/GET_CONFIGURATION_REQUEST'\nconst GET_CONFIGURATION_SUCCESS = 'config/GET_CONFIGURATION_SUCCESS'\nconst GET_CONFIGURATION_FAILURE = 'config/GET_CONFIGURATION_FAILURE'\n\nconst initialState = {\n  images: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_CONFIGURATION_SUCCESS: {\n      const { images } = payload.data\n\n      return {\n        images\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getConfiguration = () => dispatch => dispatch({\n  type: GET_CONFIGURATION_REQUEST,\n  meta: api.config.getConfiguration()\n    .then(success(GET_CONFIGURATION_SUCCESS))\n    .catch(failure(GET_CONFIGURATION_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_GENRES_REQUEST = 'genre/GET_GENRES_REQUEST'\nconst GET_GENRES_SUCCESS = 'genre/GET_GENRES_SUCCESS'\nconst GET_GENRES_FAILURE = 'genre/GET_GENRES_FAILURE'\n\nconst initialState = {\n  genres: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_GENRES_SUCCESS: {\n      const { genres } = payload.data\n\n      return {\n        // Index genres by id for better access\n        genres: genres.reduce((genres, genre) => ({\n          ...genres,\n          [genre.id]: genre\n        }), {})\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getGenres = () => dispatch => dispatch({\n  type: GET_GENRES_REQUEST,\n  meta: api.genre.getGenres()\n    .then(success(GET_GENRES_SUCCESS))\n    .catch(failure(GET_GENRES_FAILURE))\n})\n\n\nexport default reducer\n","const OPEN_STACK  = 'layout/OPEN_STACK'\nconst CLOSE_STACK = 'layout/CLOSE_STACK'\n\nconst initialState = {\n  stack: []\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case OPEN_STACK: {\n      const { namespace, props } = payload\n\n      return {\n        ...state,\n        stack: [\n          ...state.stack,\n          {\n            namespace,\n            props: props || {}\n          }\n        ]\n      }\n    }\n\n    case CLOSE_STACK:\n      return {\n        ...state,\n        stack: state.stack.filter(({ namespace }) => namespace !== payload.namespace)\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const openStack = namespace => props => dispatch => dispatch({\n  type: OPEN_STACK,\n  payload: {\n    namespace,\n    props\n  }\n})\n\nexport const closeStack = namespace => () => dispatch => dispatch({\n  type: CLOSE_STACK,\n  payload: {\n    namespace\n  }\n})\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst UPDATE_QUERY = 'search/UPDATE_QUERY'\n\nconst UPDATE_FILTER = 'search/UPDATE_FILTER'\n\nconst SEARCH_MOVIES_REQUEST = 'search/SEARCH_MOVIES_REQUEST'\nconst SEARCH_MOVIES_SUCCESS = 'search/SEARCH_MOVIES_SUCCESS'\nconst SEARCH_MOVIES_FAILURE = 'search/SEARCH_MOVIES_FAILURE'\n\nconst initialState = {\n  query: '',\n  filter: {\n    rating: null\n  },\n  results: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case UPDATE_QUERY:\n      return {\n        ...state,\n        query: payload.query\n      }\n\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          ...payload\n        }\n      }\n\n    case SEARCH_MOVIES_SUCCESS: {\n      const { query, data: { results } } = payload\n\n      // search results (movie id's) indexed by query\n      return {\n        ...state,\n        results: {\n          ...state.results,\n          [query]: results.map(({ id }) => id)\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n// Export this action will let the movie reducer use it to store the movie source\nexport {\n  SEARCH_MOVIES_SUCCESS\n}\n\nexport const updateFilter = payload => dispatch => dispatch({\n  type: UPDATE_FILTER,\n  payload\n})\n\nexport const updateQuery = payload => dispatch => {\n  dispatch({\n    type: UPDATE_QUERY,\n    payload\n  })\n\n  if( payload.query ){\n    dispatch(searchMovies(payload))\n  }\n}\n\nexport const searchMovies = payload => dispatch => dispatch({\n  type: SEARCH_MOVIES_REQUEST,\n  meta: api.search.searchMovies(payload)\n    .then(success(SEARCH_MOVIES_SUCCESS, payload))\n    .catch(failure(SEARCH_MOVIES_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nimport { SEARCH_MOVIES_SUCCESS } from './search'\n\nconst DISCOVER_MOVIES_REQUEST = 'movie/DISCOVER_MOVIES_REQUEST'\nconst DISCOVER_MOVIES_SUCCESS = 'movie/DISCOVER_MOVIES_SUCCESS'\nconst DISCOVER_MOVIES_FAILURE = 'movie/DISCOVER_MOVIES_FAILURE'\n\nconst initialState = {\n  list: [],\n  movies: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case DISCOVER_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        // on this array we just keep the id's of the movies\n        // here lives our movies order\n        list: results.map(({ id }) => id),\n\n        // on this object we store all the returned movies from the api indexed by id\n        // we use this movie object as single source of truth\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    case SEARCH_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const discoverMovies = () => dispatch => dispatch({\n  type: DISCOVER_MOVIES_REQUEST,\n  meta: api.movie.discoverMovies()\n    .then(success(DISCOVER_MOVIES_SUCCESS))\n    .catch(failure(DISCOVER_MOVIES_FAILURE))\n})\n\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport config from './config'\nimport genre from './genre'\nimport layout from './layout'\nimport movie from './movie'\nimport search from './search'\n\nexport default combineReducers({\n  config,\n  genre,\n  layout,\n  movie,\n  search\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './module'\n\nconst enhancers = []\nconst middleware = [ thunk ]\n\n\nif( process.env.NODE_ENV === 'development' ){\n  if( typeof window.__REDUX_DEVTOOLS_EXTENSION__ === 'function' ){\n    enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__())\n  }\n\n  middleware.push(createLogger({\n    collapsed: true\n  }))\n}\n\n\nconst store = createStore(\n  reducer,\n  {},\n  compose(applyMiddleware(...middleware), ...enhancers)\n)\n\n\nexport default store\n","import { createSelector } from 'reselect'\n\nexport const getGenres = createSelector(\n  ({ genre }) => genre.genres,\n  ({ movie }) => movie.genre_ids,\n  (genres, genre_ids) => genre_ids.map(id => genres[id])\n)\n","import { createSelector } from 'reselect'\n\nexport const getMovies = createSelector(\n  ({ movie }) => movie,\n  (movie) => (movie.list || []).map(id => movie.movies[id])\n)\n\nexport const filterMovies = createSelector(\n  ({ movies }) => movies,\n  ({ rating }) => rating,\n  (movies, rating) => movies.filter(({ vote_average }) => vote_average && (vote_average >= rating && vote_average < rating + 2))\n)\n\nexport const getResults = createSelector(\n  ({ movie }) => movie,\n  ({ search }) => search,\n  (movie, search) => {\n    const { query, filter: { rating }, results } = search\n\n    let movies\n\n    if( query ){\n      movies = (results[query] || []).map(id => movie.movies[id])\n    }\n    else {\n      movies = getMovies({ movie })\n    }\n\n    if( rating !== null ){\n      return filterMovies({ movies, rating })\n    }\n\n    return movies\n  }\n)\n","import * as genre from './genre'\nimport * as movie from './movie'\n\nconst selector = {\n  genre,\n  movie\n}\n\nexport default selector\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport selector from './selector'\n\nimport * as config from './module/config'\nimport * as genre from './module/genre'\nimport * as layout from './module/layout'\nimport * as movie from './module/movie'\nimport * as search from './module/search'\n\n\nexport const action = {\n  config,\n  genre,\n  layout,\n  movie,\n  search\n}\n\n\nexport {\n  selector\n}\n\n\nexport const register = (mapStateToProps, actions, Component) => connect(\n  mapStateToProps,\n  actions && (dispatch => bindActionCreators(actions, dispatch))\n)(Component)\n","import React from 'react'\nimport { register, action } from 'redux/app'\n\nconst Header = ({ openSearch }) => (\n  <div className=\"ui-header\">\n    <div className=\"ui-header-title\">\n      <h1>MUST WATCH</h1>\n    </div>\n\n    <div className=\"ui-header-search\" onClick={() => openSearch()}>\n      <i className=\"icon-search\" />\n    </div>\n  </div>\n)\n\nexport default register(\n  null,\n  {\n    openSearch: action.layout.openStack('search')\n  },\n  Header\n)\n","import React, { useRef } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport classnames from 'classnames'\n\nconst Layer = ({ className, children }) => {\n  const ref = useRef(null)\n  const arrayChildren = React.Children.toArray(children)\n\n  return (\n    <TransitionGroup component={null}>\n      {arrayChildren.map((child, i) => (\n        <CSSTransition nodeRef={ref} key={child.key} timeout={400}>\n          <div\n            ref={ref}\n            className={classnames('layer-wrap', className, {\n              active: i === arrayChildren.length - 1\n            })}\n          >\n            {child}\n          </div>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  )\n}\n\nexport default Layer\n","import { useEffect } from 'react'\n\nconst useLockScroll = () => {\n  useEffect(\n    () => {\n      document.body.style.overflow = 'hidden'\n\n      return () => document.body.removeAttribute('style')\n    }\n  )\n}\n\nexport default useLockScroll\n","import React from 'react'\nimport classnames from 'classnames'\nimport { useLockScroll } from 'hook'\n\nconst Stack = ({ className, closeStack, children }) => {\n  useLockScroll()\n\n  return (\n    <div className={classnames('ui-stack', className)}>\n      <div className=\"ui-stack-close\" onClick={closeStack}>\n        <i className=\"icon-close\" />\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nexport default Stack\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport { register } from 'redux/app'\n\nconst Poster = ({\n  size = 'w500',\n  backdrop = false,\n  onClick = null,\n  movie,\n  config\n}) => {\n  const [loaded, setLoaded] = useState(false)\n\n  const posterUrl = [\n    config.base_url,\n    size,\n    backdrop ? movie.backdrop_path : movie.poster_path\n  ].join('')\n\n  const onLoad = () => {\n    setLoaded(true)\n  }\n\n  return (\n    <div className={classnames(\"ui-poster\", { 'has-click': onClick })} onClick={onClick}>\n      <img\n        alt=\"\"\n        className={classnames({ loaded })}\n        src={posterUrl}\n        onLoad={onLoad}\n      />\n    </div>\n  )\n}\n\nexport default register(\n  ({ config, movie }, { id }) => ({\n    movie: movie.movies[id],\n    config: config.images\n  }),\n  null,\n  Poster\n)\n","import React from 'react'\nimport classnames from 'classnames'\n\nconst stars = [ ...Array(5).keys() ]\nconst range = 2\n\nconst Rating = ({ voteAverage, onChange }) => (\n  <div className=\"ui-rating\">\n    {stars.map(star => (\n      <i\n        key={star}\n        onClick={() => {\n          onChange && onChange(star)\n        }}\n        className={classnames('icon-star-outline', {\n          'icon-star-rate': voteAverage !== null && voteAverage >= star * range\n        })}\n      />\n    ))}\n  </div>\n)\n\nexport default Rating\n","import React from 'react'\n\nconst Genres = ({ genres }) => (\n  <ul className=\"ui-genres\">\n    {genres.map(({ id, name }) => (\n      <li key={id}>\n        {name}\n      </li>\n    ))}\n  </ul>\n)\n\nexport default Genres\n","import React from 'react'\nimport { register } from 'redux/app'\nimport Layer from 'component/Layout/Layer'\nimport MovieStack from 'component/Stack/Movie'\nimport SearchStack from 'component/Stack/Search'\n\n\nconst stackList = {\n  'movie': MovieStack,\n  'search': SearchStack\n}\n\n\nconst StackLayer = ({ stack, closeStack }) => (\n  <Layer className=\"ui-stack-layer\">\n    {stack.map(({ namespace, props }) => {\n\n      const Stack = stackList[namespace]\n\n      if( !Stack ){\n        return null\n      }\n\n      return (\n        <Stack\n          key={namespace}\n          {...props}\n        />\n       )\n    })}\n  </Layer>\n)\n\n\nexport default register(\n  ({ layout }) => ({\n    stack: layout.stack\n  }),\n  null,\n  StackLayer\n)\n","import React from 'react'\nimport moment from 'moment'\nimport { register, selector, action } from 'redux/app'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport Rating from 'component/Rating'\nimport Genres from 'component/Genres'\n\n\nconst MovieStack = ({ movie, genres, closeStack }) => (\n  <Stack className=\"movie-stack\" closeStack={closeStack}>\n    <div className=\"movie-stack-backdrop\">\n      <Poster id={movie.id} size=\"w1280\" backdrop />\n    </div>\n\n    <div className=\"movie-stack-content\">\n      <h1 className=\"movie-stack-title\">\n        {movie.title}\n      </h1>\n\n      {movie.vote_average > 0 && (\n        <div className=\"movie-stack-rating\">\n          <Rating voteAverage={movie.vote_average} />\n        </div>\n      )}\n\n      {movie.release_date && (\n        <div className=\"movie-stack-date\">\n          {moment(movie.release_date).format('Y')}\n        </div>\n      )}\n\n      <p className=\"movie-stack-overview\">\n        {movie.overview}\n      </p>\n\n      {genres.length > 0 && (\n        <div className=\"movie-stack-genres\">\n          <Genres genres={genres} />\n        </div>\n      )}\n    </div>\n  </Stack>\n)\n\nexport default register(\n  ({ movie, genre }, { id }) => ({\n    movie: movie.movies[id],\n    genres: selector.genre.getGenres({\n      genre,\n      movie: movie.movies[id]\n    })\n  }),\n  {\n    closeStack: action.layout.closeStack('movie')\n  },\n  MovieStack\n)\n","import React from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport Rating from 'component/Rating'\n\nconst SearchStack = ({\n  query,\n  filter,\n  results,\n  updateQuery,\n  updateFilter,\n  openMovie,\n  closeStack\n}) => {\n\n  const handleRatingChange = star => {\n    const rating = star * 2\n\n    updateFilter({\n      rating: rating === filter.rating ? null : rating\n    })\n  }\n\n  return (\n    <Stack className=\"search-stack\" closeStack={closeStack}>\n      <div className=\"search-stack-head\">\n        <div className=\"search-stack-input-wrapper\">\n          <input\n            autoFocus\n            type=\"text\"\n            placeholder=\"search movies\"\n            value={query}\n            onChange={event => updateQuery({ query: event.target.value })}\n            className=\"search-stack-input\"\n          />\n\n          <i className=\"icon-search\" />\n\n          <div className=\"search-stack-input-rating\">\n            <Rating\n              voteAverage={filter.rating}\n              onChange={handleRatingChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      {results.length > 0 && (\n        <div className=\"search-stack-grid\">\n          {results.map(({ id }) => (\n            <div key={id} className=\"search-stack-grid-item\">\n              <Poster id={id} size=\"w342\" onClick={() => openMovie({ id })} />\n            </div>\n          ))}\n        </div>\n      )}\n    </Stack>\n  )\n}\n\nexport default register(\n  ({ search, movie }) => ({\n    query: search.query,\n    filter: search.filter,\n    results: selector.movie.getResults({\n      movie,\n      search\n    })\n  }),\n  {\n    updateFilter: action.search.updateFilter,\n    updateQuery: action.search.updateQuery,\n    closeStack: action.layout.closeStack('search'),\n    openMovie: action.layout.openStack('movie')\n  },\n  SearchStack\n)\n","import React from 'react'\nimport classnames from 'classnames'\nimport Header from 'component/Layout/Header'\nimport StackLayer from 'component/Layout/Stack/Layer'\nimport { register } from 'redux/app'\n\nconst Layout = ({ stackOpen, children }) => (\n  <>\n    <main className={classnames('layer-main', { 'stack-open': stackOpen })}>\n      <div className=\"layer-main-header\">\n        <Header />\n      </div>\n\n      <div className=\"layer-main-content\">\n        {children}\n      </div>\n    </main>\n\n    <StackLayer />\n  </>\n)\n\nexport default register(\n  ({ layout }) => ({\n    stackOpen: layout.stack.length > 0\n  }),\n  null,\n  Layout\n)\n","import React, { useEffect } from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Poster from 'component/Poster'\n\nconst Main = ({ movies, discoverMovies, getConfiguration, getGenres, openMovie }) => {\n  useEffect(\n    () => {\n      discoverMovies()\n    },\n    [ discoverMovies ]\n  )\n\n  useEffect(\n    () => {\n      getConfiguration()\n    },\n    [ getConfiguration ]\n  )\n\n  useEffect(\n    () => {\n      getGenres()\n    },\n    [ getGenres ]\n  )\n\n  return (\n    <div className=\"movie-grid\">\n      {movies.map(({ id, title }) => (\n        <div key={id} className=\"movie-grid-item\">\n          <Poster id={id} onClick={() => openMovie({ id })} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\n\nexport default register(\n  ({ movie }) => ({\n    movies: selector.movie.getMovies({ movie })\n  }),\n  {\n    discoverMovies: action.movie.discoverMovies,\n    getConfiguration: action.config.getConfiguration,\n    getGenres: action.genre.getGenres,\n    openMovie: action.layout.openStack('movie')\n  },\n  Main\n)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from 'redux/store'\nimport Layout from 'component/Layout'\nimport Main from 'view/Main'\n\nimport 'asset/scss/app.scss'\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout>\n      <Main />\n    </Layout>\n  </Provider>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}