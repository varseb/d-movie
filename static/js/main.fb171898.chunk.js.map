{"version":3,"sources":["redux/http/request.js","env.js","redux/http/success.js","redux/http/failure.js","redux/api/config.js","redux/api/genre.js","redux/api/movie.js","redux/api/search.js","redux/api/index.js","redux/module/config.js","redux/module/genre.js","redux/module/layout.js","redux/module/search.js","redux/module/movie.js","redux/module/index.js","redux/store.js","redux/selector/genre.js","redux/selector/movie.js","redux/selector/index.js","redux/app.js","component/Layout/Header/Header.jsx","component/Layout/Layer/Layer.jsx","hook/useLockScroll.js","component/Layout/Stack/Stack.jsx","component/Poster/Poster.jsx","component/Rating/Rating.jsx","component/Layout/Stack/Layer.jsx","component/Stack/Movie/Movie.jsx","component/Stack/Search/Search.jsx","component/Layout/Layout.jsx","view/Main/Main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["request","payload","axios","url","params","api_key","success","type","response","store","dispatch","data","failure","error","getConfiguration","method","getGenres","discoverMovies","getMovie","id","getCredits","searchMovies","query","api","config","genre","movie","search","GET_CONFIGURATION_SUCCESS","initialState","images","meta","then","catch","reducer","state","actionType","GET_GENRES_SUCCESS","genres","reduce","OPEN_STACK","CLOSE_STACK","stack","openStack","namespace","props","closeStack","filter","UPDATE_QUERY","UPDATE_FILTER","SEARCH_MOVIES_SUCCESS","rating","results","updateFilter","updateQuery","map","DISCOVER_MOVIES_SUCCESS","GET_MOVIE_SUCCESS","GET_CREDITS_SUCCESS","list","movies","credits","combineReducers","layout","middleware","thunk","createStore","JSON","parse","window","localStorage","getItem","e","getState","compose","applyMiddleware","subscribe","setItem","stringify","saveState","createSelector","genre_ids","getMovies","getCast","cast","slice","getDirector","crew","find","job","filterMovies","vote_average","getResults","selector","action","register","mapStateToProps","actions","Component","connect","bindActionCreators","openSearch","className","onClick","Layer","children","ref","useRef","arrayChildren","React","Children","toArray","TransitionGroup","component","child","i","CSSTransition","nodeRef","timeout","classnames","active","length","key","useLockScroll","useEffect","document","body","style","overflow","removeAttribute","Stack","size","backdrop","backdrop_path","poster_path","useState","loaded","setLoaded","posterUrl","base_url","join","alt","src","onLoad","stars","Array","keys","Rating","voteAverage","onChange","star","stackList","director","title","release_date","runtime","moment","format","Math","floor","overview","name","actor","prev","curr","openMovie","autoFocus","placeholder","value","event","target","stackOpen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","getElementById","ReactDOM","render","StrictMode","setTimeout","classList","add"],"mappings":"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","file":"static/js/main.fb171898.chunk.js","sourcesContent":["import axios from 'axios'\nimport { apiUrl, apiKey } from 'env'\n\nconst request = payload => axios({\n  ...payload,\n  url: apiUrl + payload.url,\n  params: {\n    ...(payload.params || {}),\n    api_key: apiKey\n  }\n})\n\nexport default request\n","// This data should be in a non-versioned .env file\n// In order to avoid environment setup and make it easier I just used this file\n\nexport const apiUrl = 'https://api.themoviedb.org/3'\nexport const apiKey = '0d350753f143701136974b765ca31ac5'\n","import store from 'redux/store'\n\nconst success = (type, payload = {}) => response => {\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      data: response.data\n    }\n  })\n\n  return result\n}\n\n\nexport default success\n","import store from 'redux/store'\n\nconst failure = (type, payload = {}) => error => {\n\n  const { data } = error.response || { data : {} }\n\n  const result = store.dispatch({\n    type,\n    payload: {\n      ...payload,\n      error: data.error\n    }\n  })\n\n  return result\n}\n\n\nexport default failure\n","import { request } from 'redux/http'\n\nexport const getConfiguration = () => request({\n  method: 'GET',\n  url: '/configuration'\n})\n","import { request } from 'redux/http'\n\nexport const getGenres = () => request({\n  method: 'GET',\n  url: '/genre/movie/list'\n})\n","import { request } from 'redux/http'\n\nexport const discoverMovies = () => request({\n  method: 'GET',\n  url: '/discover/movie'\n})\n\nexport const getMovie = ({ id }) => request({\n  method: 'GET',\n  url: `/movie/${id}`\n})\n\nexport const getCredits = ({ id }) => request({\n  method: 'GET',\n  url: `/movie/${id}/credits`\n})\n","import { request } from 'redux/http'\n\nexport const searchMovies = ({ query }) => request({\n  method: 'GET',\n  url: '/search/movie',\n  params: {\n    query\n  }\n})\n\n","import * as config from './config'\nimport * as genre from './genre'\nimport * as movie from './movie'\nimport * as search from './search'\n\nconst api = {\n  config,\n  genre,\n  movie,\n  search\n}\n\nexport default api\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_CONFIGURATION_REQUEST = 'config/GET_CONFIGURATION_REQUEST'\nconst GET_CONFIGURATION_SUCCESS = 'config/GET_CONFIGURATION_SUCCESS'\nconst GET_CONFIGURATION_FAILURE = 'config/GET_CONFIGURATION_FAILURE'\n\nconst initialState = {\n  images: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_CONFIGURATION_SUCCESS: {\n      const { images } = payload.data\n\n      return {\n        images\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getConfiguration = () => dispatch => dispatch({\n  type: GET_CONFIGURATION_REQUEST,\n  meta: api.config.getConfiguration()\n    .then(success(GET_CONFIGURATION_SUCCESS))\n    .catch(failure(GET_CONFIGURATION_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst GET_GENRES_REQUEST = 'genre/GET_GENRES_REQUEST'\nconst GET_GENRES_SUCCESS = 'genre/GET_GENRES_SUCCESS'\nconst GET_GENRES_FAILURE = 'genre/GET_GENRES_FAILURE'\n\nconst initialState = {\n  genres: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case GET_GENRES_SUCCESS: {\n      const { genres } = payload.data\n\n      return {\n        // Index genres by id for better access\n        genres: genres.reduce((genres, genre) => ({\n          ...genres,\n          [genre.id]: genre\n        }), {})\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const getGenres = () => dispatch => dispatch({\n  type: GET_GENRES_REQUEST,\n  meta: api.genre.getGenres()\n    .then(success(GET_GENRES_SUCCESS))\n    .catch(failure(GET_GENRES_FAILURE))\n})\n\n\nexport default reducer\n","const OPEN_STACK  = 'layout/OPEN_STACK'\nconst CLOSE_STACK = 'layout/CLOSE_STACK'\n\nconst initialState = {\n  stack: []\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case OPEN_STACK: {\n      const { namespace, props } = payload\n\n      return {\n        ...state,\n        stack: [\n          ...state.stack,\n          {\n            namespace,\n            props: props || {}\n          }\n        ]\n      }\n    }\n\n    case CLOSE_STACK:\n      return {\n        ...state,\n        stack: state.stack.filter(({ namespace }) => namespace !== payload.namespace)\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const openStack = namespace => props => dispatch => dispatch({\n  type: OPEN_STACK,\n  payload: {\n    namespace,\n    props\n  }\n})\n\nexport const closeStack = namespace => () => dispatch => dispatch({\n  type: CLOSE_STACK,\n  payload: {\n    namespace\n  }\n})\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nconst UPDATE_QUERY = 'search/UPDATE_QUERY'\n\nconst UPDATE_FILTER = 'search/UPDATE_FILTER'\n\nconst SEARCH_MOVIES_REQUEST = 'search/SEARCH_MOVIES_REQUEST'\nconst SEARCH_MOVIES_SUCCESS = 'search/SEARCH_MOVIES_SUCCESS'\nconst SEARCH_MOVIES_FAILURE = 'search/SEARCH_MOVIES_FAILURE'\n\nconst initialState = {\n  query: '',\n  filter: {\n    rating: null\n  },\n  results: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case UPDATE_QUERY:\n      return {\n        ...state,\n        query: payload.query\n      }\n\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          ...payload\n        }\n      }\n\n    case SEARCH_MOVIES_SUCCESS: {\n      const { query, data: { results } } = payload\n\n      // search results (movie id's) indexed by query\n      return {\n        ...state,\n        results: {\n          ...state.results,\n          [query]: results.map(({ id }) => id)\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n// Export this action will let the movie reducer use it to store the movie source\nexport {\n  SEARCH_MOVIES_SUCCESS\n}\n\nexport const updateFilter = payload => dispatch => dispatch({\n  type: UPDATE_FILTER,\n  payload\n})\n\nexport const updateQuery = payload => dispatch => {\n  dispatch({\n    type: UPDATE_QUERY,\n    payload\n  })\n\n  if( payload.query ){\n    dispatch(searchMovies(payload))\n  }\n}\n\nexport const searchMovies = payload => dispatch => dispatch({\n  type: SEARCH_MOVIES_REQUEST,\n  meta: api.search.searchMovies(payload)\n    .then(success(SEARCH_MOVIES_SUCCESS, payload))\n    .catch(failure(SEARCH_MOVIES_FAILURE))\n})\n\n\nexport default reducer\n","import api from 'redux/api'\nimport { success, failure } from 'redux/http'\n\nimport { SEARCH_MOVIES_SUCCESS } from './search'\n\nconst DISCOVER_MOVIES_REQUEST = 'movie/DISCOVER_MOVIES_REQUEST'\nconst DISCOVER_MOVIES_SUCCESS = 'movie/DISCOVER_MOVIES_SUCCESS'\nconst DISCOVER_MOVIES_FAILURE = 'movie/DISCOVER_MOVIES_FAILURE'\n\nconst GET_MOVIE_REQUEST = 'movie/GET_MOVIE_REQUEST'\nconst GET_MOVIE_SUCCESS = 'movie/GET_MOVIE_SUCCESS'\nconst GET_MOVIE_FAILURE = 'movie/GET_MOVIE_FAILURE'\n\nconst GET_CREDITS_REQUEST = 'movie/GET_CREDITS_REQUEST'\nconst GET_CREDITS_SUCCESS = 'movie/GET_CREDITS_SUCCESS'\nconst GET_CREDITS_FAILURE = 'movie/GET_CREDITS_FAILURE'\n\nconst initialState = {\n  list: [],\n  movies: {},\n  credits: {}\n}\n\nconst reducer = (state = initialState, { type: actionType, payload }) => {\n  switch( actionType ){\n    case DISCOVER_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        // on this array we just keep the id's of the movies\n        // here lives our movies order\n        list: results.map(({ id }) => id),\n\n        // on this object we store all the returned movies from the api indexed by id\n        // we use this movie object as single source of truth\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    case SEARCH_MOVIES_SUCCESS: {\n      const { results } = payload.data\n\n      return {\n        ...state,\n        movies: results.reduce((movies, movie) => ({\n          ...movies,\n          [movie.id]: movie\n        }), { ...state.movies })\n      }\n    }\n\n    case GET_MOVIE_SUCCESS: {\n      const { id, data: movie } = payload\n\n      return {\n        ...state,\n        movies: {\n          ...state.movies,\n          [id]: {\n            ...state.movies[id],\n            ...movie\n          }\n        }\n      }\n    }\n\n    case GET_CREDITS_SUCCESS: {\n      const { id, data } = payload\n\n      return {\n        ...state,\n        credits: {\n          ...state.credits,\n          [id]: data\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\n\nexport const discoverMovies = () => dispatch => dispatch({\n  type: DISCOVER_MOVIES_REQUEST,\n  meta: api.movie.discoverMovies()\n    .then(success(DISCOVER_MOVIES_SUCCESS))\n    .catch(failure(DISCOVER_MOVIES_FAILURE))\n})\n\n\nexport const getMovie = payload => dispatch => dispatch({\n  type: GET_MOVIE_REQUEST,\n  meta: api.movie.getMovie(payload)\n    .then(success(GET_MOVIE_SUCCESS, payload))\n    .catch(failure(GET_MOVIE_FAILURE))\n})\n\nexport const getCredits = payload => dispatch => dispatch({\n  type: GET_CREDITS_REQUEST,\n  meta: api.movie.getCredits(payload)\n    .then(success(GET_CREDITS_SUCCESS, payload))\n    .catch(failure(GET_CREDITS_FAILURE))\n})\n\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport config from './config'\nimport genre from './genre'\nimport layout from './layout'\nimport movie from './movie'\nimport search from './search'\n\nexport default combineReducers({\n  config,\n  genre,\n  layout,\n  movie,\n  search\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './module'\n\nconst enhancers = []\nconst middleware = [ thunk ]\n\n\nif( process.env.NODE_ENV === 'development' ){\n  if( typeof window.__REDUX_DEVTOOLS_EXTENSION__ === 'function' ){\n    enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__())\n  }\n\n  middleware.push(createLogger({\n    collapsed: true\n  }))\n}\n\n\nconst store = createStore(\n  reducer,\n  getState(),\n  compose(applyMiddleware(...middleware), ...enhancers)\n)\n\n\nstore.subscribe(() => {\n  const { config, genres } = store.getState()\n\n  // save configuration and genres states into localStorage\n  saveState({\n    config,\n    genres\n  })\n})\n\n\nfunction getState(){\n  try {\n    return JSON.parse(window.localStorage.getItem('state')) || {}\n  }\n  catch (e) {\n    return {}\n  }\n}\n\n\nfunction saveState( state ){\n  try {\n    window.localStorage.setItem('state', JSON.stringify(state))\n  }\n  catch (e) {}\n}\n\n\nexport default store\n","import { createSelector } from 'reselect'\n\nexport const getGenres = createSelector(\n  ({ genre }) => genre.genres,\n  ({ movie }) => movie.movies,\n  ({ id }) => id,\n  (genres, movies, id) => movies[id].genre_ids.map(id => genres[id])\n)\n","import { createSelector } from 'reselect'\n\nexport const getMovies = createSelector(\n  ({ movie }) => movie,\n  (movie) => (movie.list || []).map(id => movie.movies[id])\n)\n\nexport const getCast = createSelector(\n  ({ movie }) => movie.credits,\n  ({ id }) => id,\n  (credits, id) => credits[id] ? credits[id].cast.slice(0,3) : []\n)\n\nexport const getDirector = createSelector(\n  ({ movie }) => movie.credits,\n  ({ id }) => id,\n  (credits, id) => credits[id] ? credits[id].crew.find(crew => crew.job === 'Director') : null\n)\n\nexport const filterMovies = createSelector(\n  ({ movies }) => movies,\n  ({ rating }) => rating,\n  (movies, rating) => movies.filter(({ vote_average }) => vote_average && (vote_average >= rating && vote_average < rating + 2))\n)\n\nexport const getResults = createSelector(\n  ({ movie }) => movie,\n  ({ search }) => search,\n  (movie, search) => {\n    const { query, filter: { rating }, results } = search\n\n    let movies\n\n    if( query ){\n      movies = (results[query] || []).map(id => movie.movies[id])\n    }\n    else {\n      movies = getMovies({ movie })\n    }\n\n    if( rating !== null ){\n      return filterMovies({ movies, rating })\n    }\n\n    return movies\n  }\n)\n","import * as genre from './genre'\nimport * as movie from './movie'\n\nconst selector = {\n  genre,\n  movie\n}\n\nexport default selector\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport selector from './selector'\n\nimport * as config from './module/config'\nimport * as genre from './module/genre'\nimport * as layout from './module/layout'\nimport * as movie from './module/movie'\nimport * as search from './module/search'\n\n\nexport const action = {\n  config,\n  genre,\n  layout,\n  movie,\n  search\n}\n\n\nexport {\n  selector\n}\n\n\nexport const register = (mapStateToProps, actions, Component) => connect(\n  mapStateToProps,\n  actions && (dispatch => bindActionCreators(actions, dispatch))\n)(Component)\n","import React from 'react'\nimport { register, action } from 'redux/app'\n\nconst Header = ({ openSearch }) => (\n  <div className=\"ui-header\">\n    <div className=\"ui-header-title\">\n      <h1>MUST WATCH</h1>\n    </div>\n\n    <div className=\"ui-header-search\" onClick={() => openSearch()}>\n      <i className=\"icon-search\" />\n    </div>\n  </div>\n)\n\nexport default register(\n  null,\n  {\n    openSearch: action.layout.openStack('search')\n  },\n  Header\n)\n","import React, { useRef } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport classnames from 'classnames'\n\nconst Layer = ({ className, children }) => {\n  const ref = useRef(null)\n  const arrayChildren = React.Children.toArray(children)\n\n  return (\n    <TransitionGroup component={null}>\n      {arrayChildren.map((child, i) => (\n        <CSSTransition nodeRef={ref} key={child.key} timeout={400}>\n          <div\n            ref={ref}\n            className={classnames('layer-wrap', className, {\n              active: i === arrayChildren.length - 1\n            })}\n          >\n            {child}\n          </div>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  )\n}\n\nexport default Layer\n","import { useEffect } from 'react'\n\nconst useLockScroll = () => {\n  useEffect(\n    () => {\n      document.body.style.overflow = 'hidden'\n\n      return () => document.body.removeAttribute('style')\n    }\n  )\n}\n\nexport default useLockScroll\n","import React from 'react'\nimport classnames from 'classnames'\nimport { useLockScroll } from 'hook'\n\nconst Stack = ({ className, closeStack, children }) => {\n  useLockScroll()\n\n  return (\n    <div className={classnames('ui-stack', className)}>\n      <div className=\"ui-stack-close\" onClick={closeStack}>\n        <i className=\"icon-close\" />\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nexport default Stack\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport { register } from 'redux/app'\n\nconst Poster = ({\n  size = 'w500',\n  backdrop = false,\n  onClick = null,\n  movie: { backdrop_path, poster_path },\n  config\n}) => {\n  const [loaded, setLoaded] = useState(false)\n\n  const posterUrl = [\n    config.base_url,\n    size,\n    backdrop ? backdrop_path || poster_path : poster_path\n  ].join('')\n\n  const onLoad = () => {\n    setLoaded(true)\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      className={classnames('ui-poster', {\n        backdrop,\n        'has-click': onClick\n      })}\n    >\n      <img\n        alt=\"\"\n        className={classnames({ loaded })}\n        src={posterUrl}\n        onLoad={onLoad}\n      />\n    </div>\n  )\n}\n\nexport default register(\n  ({ config, movie }, { id }) => ({\n    movie: movie.movies[id],\n    config: config.images\n  }),\n  null,\n  Poster\n)\n","import React from 'react'\nimport classnames from 'classnames'\n\nconst stars = [ ...Array(5).keys() ]\nconst range = 2\n\nconst Rating = ({ voteAverage, onChange }) => (\n  <div className=\"ui-rating\">\n    {stars.map(star => (\n      <i\n        key={star}\n        onClick={() => {\n          onChange && onChange(star)\n        }}\n        className={classnames('icon-star-outline', {\n          'icon-star-rate': voteAverage !== null && voteAverage >= star * range\n        })}\n      />\n    ))}\n  </div>\n)\n\nexport default Rating\n","import React from 'react'\nimport { register } from 'redux/app'\nimport Layer from 'component/Layout/Layer'\nimport MovieStack from 'component/Stack/Movie'\nimport SearchStack from 'component/Stack/Search'\n\n\nconst stackList = {\n  'movie': MovieStack,\n  'search': SearchStack\n}\n\n\nconst StackLayer = ({ stack, closeStack }) => (\n  <Layer className=\"ui-stack-layer\">\n    {stack.map(({ namespace, props }) => {\n\n      const Stack = stackList[namespace]\n\n      if( !Stack ){\n        return null\n      }\n\n      return (\n        <Stack\n          key={namespace}\n          {...props}\n        />\n       )\n    })}\n  </Layer>\n)\n\n\nexport default register(\n  ({ layout }) => ({\n    stack: layout.stack\n  }),\n  null,\n  StackLayer\n)\n","import React, { useEffect } from 'react'\nimport moment from 'moment'\nimport { register, selector, action } from 'redux/app'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport Rating from 'component/Rating'\n\n\nconst MovieStack = ({\n  id,\n  movie,\n  genres,\n  cast,\n  director,\n  getMovie,\n  getCredits,\n  closeStack\n}) => {\n\n  useEffect(\n    () => {\n      getMovie({ id })\n      getCredits({ id })\n    },\n    [ id, getMovie, getCredits ]\n  )\n\n  return (\n    <Stack className=\"movie-stack\" closeStack={closeStack}>\n      <div className=\"movie-stack-backdrop\">\n        <Poster id={id} size=\"w1280\" backdrop />\n      </div>\n\n      <div className=\"movie-stack-content\">\n        <h1 className=\"movie-stack-title\">\n          {movie.title}\n        </h1>\n\n        {movie.vote_average > 0 && (\n          <div className=\"movie-stack-rating\">\n            <Rating voteAverage={movie.vote_average} />\n          </div>\n        )}\n\n        {(movie.release_date || movie.runtime) && (\n          <div className=\"movie-stack-date\">\n            {movie.release_date && (\n              <span>\n                {moment(movie.release_date).format('Y')}\n              </span>\n            )}\n            {' '}\n            -\n            {' '}\n            {movie.runtime > 0 && (\n              <span className=\"fade-in\">\n                {Math.floor(movie.runtime / 60)}h {Math.floor(movie.runtime % 60 % 60)}m\n              </span>\n            )}\n          </div>\n        )}\n\n        <p className=\"movie-stack-overview\">\n          {movie.overview}\n        </p>\n\n        {genres.length > 0 && (\n          <div className=\"movie-stack-genres\">\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>\n                  {name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {cast.length > 0 && (\n          <div className=\"movie-stack-credits fade-in\">\n            <div className=\"movie-stack-credits-title\">\n              Cast\n            </div>\n            <div className=\"movie-stack-credits-value\">\n              {cast.map(actor => actor.name).reduce((prev, curr) => [prev, ', ', curr])}\n            </div>\n          </div>\n        )}\n\n        {director && (\n          <div className=\"movie-stack-credits fade-in\">\n            <div className=\"movie-stack-credits-title\">\n              Director\n            </div>\n            <div className=\"movie-stack-credits-value\">\n              {director.name}\n            </div>\n          </div>\n        )}\n      </div>\n    </Stack>\n  )\n}\n\nexport default register(\n  ({ movie, genre }, { id }) => ({\n    movie: movie.movies[id],\n    genres: selector.genre.getGenres({ genre, movie, id }),\n    cast: selector.movie.getCast({ movie, id }),\n    director: selector.movie.getDirector({ movie, id })\n  }),\n  {\n    getMovie: action.movie.getMovie,\n    getCredits: action.movie.getCredits,\n    closeStack: action.layout.closeStack('movie')\n  },\n  MovieStack\n)\n","import React from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Stack from 'component/Layout/Stack'\nimport Poster from 'component/Poster'\nimport Rating from 'component/Rating'\n\nconst SearchStack = ({\n  query,\n  filter,\n  results,\n  updateQuery,\n  updateFilter,\n  openMovie,\n  closeStack\n}) => {\n\n  const handleRatingChange = star => {\n    const rating = star * 2\n\n    updateFilter({\n      rating: rating === filter.rating ? null : rating\n    })\n  }\n\n  return (\n    <Stack className=\"search-stack\" closeStack={closeStack}>\n      <div className=\"search-stack-head\">\n        <div className=\"search-stack-input-wrapper\">\n          <input\n            autoFocus\n            type=\"text\"\n            placeholder=\"search movies\"\n            value={query}\n            onChange={event => updateQuery({ query: event.target.value })}\n            className=\"search-stack-input\"\n          />\n\n          <i className=\"icon-search\" />\n\n          <div className=\"search-stack-input-rating\">\n            <Rating\n              voteAverage={filter.rating}\n              onChange={handleRatingChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      {results.length > 0 && (\n        <div className=\"search-stack-grid\">\n          {results.map(({ id }) => (\n            <div key={id} className=\"search-stack-grid-item\">\n              <Poster id={id} size=\"w342\" onClick={() => openMovie({ id })} />\n            </div>\n          ))}\n        </div>\n      )}\n    </Stack>\n  )\n}\n\nexport default register(\n  ({ search, movie }) => ({\n    query: search.query,\n    filter: search.filter,\n    results: selector.movie.getResults({ movie, search })\n  }),\n  {\n    updateFilter: action.search.updateFilter,\n    updateQuery: action.search.updateQuery,\n    closeStack: action.layout.closeStack('search'),\n    openMovie: action.layout.openStack('movie')\n  },\n  SearchStack\n)\n","import React from 'react'\nimport classnames from 'classnames'\nimport Header from 'component/Layout/Header'\nimport StackLayer from 'component/Layout/Stack/Layer'\nimport { register } from 'redux/app'\n\nconst Layout = ({ stackOpen, children }) => (\n  <>\n    <main className={classnames('layer-main', { 'stack-open': stackOpen })}>\n      <div className=\"layer-main-header\">\n        <Header />\n      </div>\n\n      <div className=\"layer-main-content\">\n        {children}\n      </div>\n    </main>\n\n    <StackLayer />\n  </>\n)\n\nexport default register(\n  ({ layout }) => ({\n    stackOpen: layout.stack.length > 0\n  }),\n  null,\n  Layout\n)\n","import React, { useEffect } from 'react'\nimport { register, selector, action } from 'redux/app'\nimport Poster from 'component/Poster'\n\nconst Main = ({ movies, discoverMovies, getConfiguration, getGenres, openMovie }) => {\n  useEffect(\n    () => {\n      discoverMovies()\n    },\n    [ discoverMovies ]\n  )\n\n  useEffect(\n    () => {\n      getConfiguration()\n    },\n    [ getConfiguration ]\n  )\n\n  useEffect(\n    () => {\n      getGenres()\n    },\n    [ getGenres ]\n  )\n\n  return (\n    <div className=\"movie-grid\">\n      {movies.map(({ id, title }) => (\n        <div key={id} className=\"movie-grid-item\">\n          <Poster id={id} onClick={() => openMovie({ id })} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\n\nexport default register(\n  ({ movie }) => ({\n    movies: selector.movie.getMovies({ movie })\n  }),\n  {\n    discoverMovies: action.movie.discoverMovies,\n    getConfiguration: action.config.getConfiguration,\n    getGenres: action.genre.getGenres,\n    openMovie: action.layout.openStack('movie')\n  },\n  Main\n)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from 'redux/store'\nimport Layout from 'component/Layout'\nimport Main from 'view/Main'\n\nimport 'asset/scss/app.scss'\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout>\n      <Main />\n    </Layout>\n  </Provider>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n)\n\nsetTimeout(() => root.classList.add('ready'), 1000)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}